#pragma checksum "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f1609bafafea6b5371d3ed32b13bf5ee7030e4a7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Editor_Index), @"mvc.1.0.view", @"/Views/Editor/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Editor/Index.cshtml", typeof(AspNetCore.Views_Editor_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\artur\source\repos\Terz\Terz\Views\_ViewImports.cshtml"
using Terz;

#line default
#line hidden
#line 2 "C:\Users\artur\source\repos\Terz\Terz\Views\_ViewImports.cshtml"
using Terz.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f1609bafafea6b5371d3ed32b13bf5ee7030e4a7", @"/Views/Editor/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a2e29dedaf5a7a7167ab403312e09f21f298b081", @"/Views/_ViewImports.cshtml")]
    public class Views_Editor_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Terz.Models.Editor.EditorView>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Editor.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Operations.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Variables.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Filter.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Indicator.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Graph.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Settings.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(158, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(160, 49, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "60313b2ed0f5473c931b65908398948c", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(209, 1314, true);
            WriteLiteral(@"
<link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"">
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js""></script>
<div id=""Menu"">
    <button onclick=""addIndicador()"">Indicador</button>
    <button onclick=""AddGraph()"">Grafico</button>
    <button onclick=""buildFilterSettings()"">Filtros</button>
</div>
<div id=""Pages"">
    <div class=""dropdown"">
        <button class=""btn btn-primary dropdown-toggle"" type=""button"" data-toggle=""dropdown"">
            Paginas
            <span class=""caret""></span>
        </button>
        <ul id=""sheetList"" class=""dropdown-menu""></ul>
    </div>
</div>
<div>
    <div id=""Sheet"" >
        <div id=""Graphs"" class=""resize-container""></div>
    </div>
    <div id=""Settings"" overflow-y: scroll; style=""height:700px"">

    </div>
</div>


<script src=""https://unpkg.com/mathjs/dist/math.min.");
            WriteLiteral(@"js""></script>
<script language=""JavaScript"" src=""https://cdnjs.cloudflare.com/ajax/libs/mathjs/3.2.1/math.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/d3plus/2.0.0-alpha.14/d3plus.full.js""></script>
<script src=""https://d3js.org/d3-hierarchy.v1.min.js""></script>

");
            EndContext();
            BeginContext(1523, 42, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "44171969ca7848c5b9115ebfde60968c", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1565, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(1567, 41, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "dd381365e27d49a88be856cb956a2f9a", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1608, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(1610, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5e31116c140471798ebeb015cf185e8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1648, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(1650, 41, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ff7406c75e8a45d29f25434f5caff61c", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1691, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(1693, 37, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3f29d83994cd43a2ad624713ba59b703", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1730, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(1732, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da1893f1ef19485fac68db79cddbac39", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1772, 18592, true);
            WriteLiteral(@"
<script type=""module"">
    import interact from
        'https://cdn.interactjs.io/v1.9.19/interactjs/index.js'

    function dragMoveListener(event) {
        var target = event.target
        // keep the dragged position in the data-x/data-y attributes
        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx
        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy

        // translate the element
        target.style.webkitTransform =
            target.style.transform =
            'translate(' + x + 'px, ' + y + 'px)'

        // update the posiion attributes
        target.setAttribute('data-x', x)
        target.setAttribute('data-y', y)
    }

    // this function is used later in the resizing and gesture demos
    window.dragMoveListener = dragMoveListener;

    interact('.resize-drag')
        .draggable({
            onmove: window.dragMoveListener
        })
        .resizable({
            preserveAspectRatio: false,
           ");
            WriteLiteral(@" edges: { left: true, right: true, bottom: true, top: true }
        })
        .on('resizemove', function (event) {
            var target = event.target,
                x = (parseFloat(target.getAttribute('data-x')) || 0),
                y = (parseFloat(target.getAttribute('data-y')) || 0);

            // update the element's style
            target.style.width = event.rect.width + 'px';
            target.style.height = event.rect.height + 'px';

            // translate when resizing from top or left edges
            x += event.deltaRect.left;
            y += event.deltaRect.top;

            target.style.webkitTransform = target.style.transform =
                'translate(' + x + 'px,' + y + 'px)';

            target.setAttribute('data-x', x);
            target.setAttribute('data-y', y);
           
         //   target.textContent = event.rect.width + '×' + event.rect.height;
        });



</script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0");
            WriteLiteral(@"/bootbox.min.js""></script>
<script>
    
    function addIndicador() {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: '../Editor/AddIndicador',
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result)

                        var indicador = {};
                        indicador[""id""] = Date.now().toString();
                        indicador[""dataFrameName""] = document.getElementById(""DataFrameAdd"").value;
                        var style = {};
                        style[""id""] = Date.now().toString();
                        style[""width""] = document.getElementById(""WidthAdd"").value;
                        style[""height""] = document.getElementById(""HeightAdd"").value;
                        style[""x""] = document.getEleme");
            WriteLiteral(@"ntById(""XAdd"").value;
                        style[""y""] = document.getElementById(""YAdd"").value;
                        style[""backgroundColor""] = document.getElementById(""BackgroundColorAdd"").value;
                        style[""textColor""] = document.getElementById(""TextColorAdd"").value;
                        style[""fontSize""] = document.getElementById(""FontSizeAdd"").value;

                        indicador[""style""] = style;

                        var measure = {};
                        measure[""id""] = Date.now().toString();
                        measure[""name""] = document.getElementById(""MeasureNameAdd"").value;
                        measure[""expresion""] = document.getElementById(""ExpressionAdd"").value;

                        indicador[""measure""] = measure;

                        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
                        reportData.config.sheets[sheetPos].indicators.push(indicador);

      ");
            WriteLiteral(@"                  reloadSheet();
                        setObjEvents();
                        


                    });

                },




            });
    }

    function AddGraph() {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: '../Editor/AddGraph',
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result)

                        var graph = {};
                        graph[""id""] = Date.now().toString();
                        graph[""dataFrameName""] = document.getElementById(""DataFrameAdd"").value;
                        graph[""title""] = document.getElementById(""TitleAdd"").value;
                        graph[""objectType""] = document.getElementById(""TipoAdd"").value;
                        var style");
            WriteLiteral(@" = {};
                        style[""id""] = Date.now().toString();
                        style[""width""] = document.getElementById(""WidthAdd"").value;
                        style[""height""] = document.getElementById(""HeightAdd"").value;
                        style[""x""] = document.getElementById(""XAdd"").value;
                        style[""y""] = document.getElementById(""YAdd"").value;
                       

                        graph[""style""] = style;

                        graph[""measures""] = [];
                        graph[""dimensions""] = [];

                       

                        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
                        reportData.config.sheets[sheetPos].graphs.push(graph);

                        reloadSheet();
                        setObjEvents();



                    });

                },




            });
    }

    function AddSheet() {
        var sheet ");
            WriteLiteral(@"= {}
        sheet[""id""] = Date.now().toString();
        sheet[""name""] = ""Nova Pasta"";
        sheet[""order""] = (reportData.config.sheets.length + 1).toString();
        sheet[""graphs""] = [];
        sheet[""indicators""] = [];
        sheet[""filters""] = [];

        reportData.config.sheets.push(sheet);
        buildSheetMenu();
        changeSheet(sheet[""order""]);

    }

    var ConfigBackup;

      function init() {
        loadUsingDataFrames();
        buildSheetMenu();
        buildIndicators(currentSheet);
          buildGraphs(currentSheet);
          setObjEvents();
          ConfigBackup = JSON.parse(JSON.stringify(reportData.config));

    }
    function updateSheetConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.id; }).indexOf(id);
        reportData.config.sheets[sheetPos].name = document.getElementById(""sheetName"").value;
        buildSheetMenu();

        
    }

    function updateFilterConfig(id) {
        var sheetPos ");
            WriteLiteral(@"= reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var filterPos = reportData.config.sheets[sheetPos].filters.map(function (e) { return e.id; }).indexOf(id);
        reportData.config.sheets[sheetPos].filters[filterPos].dataFrameName = document.getElementById(""DataFrame"" + id).value;
        reportData.config.sheets[sheetPos].filters[filterPos].dimension.name = document.getElementById(""filterName"" + id).value;
        reportData.config.sheets[sheetPos].filters[filterPos].dimension.field = document.getElementById(""filterField"" + id).value;
        buildFilterSettings();
    }

    function updateIndicatorConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var indicatorPos = reportData.config.sheets[sheetPos].indicators.map(function (e) { return e.id; }).indexOf(id);
        reportData.config.sheets[sheetPos].indicators[indicatorPos].dataFrameName = document.getElementById(""DataF");
            WriteLiteral(@"rame"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].measure.name = document.getElementById(""MeasureName"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].measure.expresion = document.getElementById(""Expression"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.width = document.getElementById(""Width"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.height = document.getElementById(""Height"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.x = document.getElementById(""X"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.y = document.getElementById(""Y"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.backgroundColor = document.getElementById(""BackgroundColor"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.textColor = document.getElementById(""TextColor"").v");
            WriteLiteral(@"alue;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.fontSize = document.getElementById(""FontSize"").value;

       

        reloadSheet();
        setObjEvents();
    }

    

    function updadateIndicatorDimensions(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var indicatorPos = reportData.config.sheets[sheetPos].indicators.map(function (e) { return e.id; }).indexOf(id);
        var transform = document.getElementById(""ind"" + id).style.transform.replace('translate', '').replace('(', '').replace(')', '').replace('px', '').replace('px', '').split(',');
       
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.width = parseInt(document.getElementById(""ind"" + id).style.width);
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.height = parseInt(document.getElementById(""ind"" + id).style.height);
        if (transform != """" && transform != null) ");
            WriteLiteral(@"{
            var x = parseInt(reportData.config.sheets[sheetPos].indicators[indicatorPos].style.x) + parseInt(transform[0]);
            reportData.config.sheets[sheetPos].indicators[indicatorPos].style.x = x.toString();
            var y = parseInt(reportData.config.sheets[sheetPos].indicators[indicatorPos].style.y) + parseInt(transform[1]);
            reportData.config.sheets[sheetPos].indicators[indicatorPos].style.y = y.toString();
        }
       reloadSheet();
        setObjEvents();
        buildIndicatorSettings(id);
    }

    function updadateGraphDimensions(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var graphPos = reportData.config.sheets[sheetPos].graphs.map(function (e) { return e.id; }).indexOf(id);
        var transform = document.getElementById(""gc"" + id).style.transform.replace('translate', '').replace('(', '').replace(')', '').replace('px', '').replace('px', '').split(',');
      
        repor");
            WriteLiteral(@"tData.config.sheets[sheetPos].graphs[graphPos].style.width = parseInt(document.getElementById(""gc"" + id).style.width);
        reportData.config.sheets[sheetPos].graphs[graphPos].style.height = parseInt(document.getElementById(""gc"" + id).style.height);
        if (transform != """" && transform != null) {
            var x = parseInt(reportData.config.sheets[sheetPos].graphs[graphPos].style.x) + parseInt(transform[0]);
            reportData.config.sheets[sheetPos].graphs[graphPos].style.x = x.toString();
            var y = parseInt(reportData.config.sheets[sheetPos].graphs[graphPos].style.y) + parseInt(transform[1]);
            reportData.config.sheets[sheetPos].graphs[graphPos].style.y = y.toString();
        }

        reloadSheet();
        setObjEvents();
        buildGraphSettings(id);
    }

    function updateGraphConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var graphPos = reportData.config.sheets[shee");
            WriteLiteral(@"tPos].graphs.map(function (e) { return e.id; }).indexOf(id);

        reportData.config.sheets[sheetPos].graphs[graphPos].dataFrameName = document.getElementById(""DataFrame"").value;
       
        reportData.config.sheets[sheetPos].graphs[graphPos].style.width = document.getElementById(""Width"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.height = document.getElementById(""Height"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.x = document.getElementById(""X"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.y = document.getElementById(""Y"").value;

        for (var i = 0; i < reportData.config.sheets[sheetPos].graphs[graphPos].dimensions.length; i++) {
            var dimId = reportData.config.sheets[sheetPos].graphs[graphPos].dimensions[i].id;
            reportData.config.sheets[sheetPos].graphs[graphPos].dimensions[i].name = document.getElementById(""dimname"" + dimId).value;
            reportData.config.sheets[sheetPo");
            WriteLiteral(@"s].graphs[graphPos].dimensions[i].field = document.getElementById(""dimfield"" + dimId).value;
        }

        for (var i = 0; i < reportData.config.sheets[sheetPos].graphs[graphPos].measures.length; i++) {
            var measureId = reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].id;
            reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].name = document.getElementById(""measureName"" + measureId).value;
            reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].expresion = document.getElementById(""measureExp"" + measureId).value;
        }

        switch (reportData.config.sheets[sheetPos].graphs[graphPos].objectType) {
            case 'bar': { updateBarChart(sheetPos, graphPos); break; }
            case 'pie': { updatePieChart(sheetPos, graphPos); break; }
            case 'line': { updateLineChart(sheetPos, graphPos); break; }
            case 'tree': { updateTreeMap(sheetPos, graphPos); break; }
            default: break;
        }
");
            WriteLiteral(@"
        reloadSheet();
        setObjEvents();
    }

    function updateBarChart(sheetPos, graphPos) {
       

    }

    function updatePieChart(sheetPos, graphPos) {

    }

    function updateLineChart(sheetPos, graphPos) {

    }

    function updateTreeMap(sheetPos, graphPos) {

    }


    function setObjEvents() {
        var sheets = reportData.config.sheets.filter(function (x) { return x.order == currentSheet });
        for (var i = 0; i < sheets.length; i++) {
            var sheet = sheets[i];
            var indicators = sheet.indicators;
            for (var j = 0; j < indicators.length; j++) {
                var indicator = indicators[j];
                document.getElementById(""ind"" + indicator.id).setAttribute(""onclick"", ""indicatorSettings('"" + indicator.id + ""')"");
                document.getElementById(""ind"" + indicator.id).setAttribute(""onmouseup"", ""updadateIndicatorDimensions('"" + indicator.id + ""')"");
            }

            var graphs = sheet.gra");
            WriteLiteral(@"phs;
            for (var j = 0; j < graphs.length; j++) {
                var graph = graphs[j];
                document.getElementById(""gc"" + graph.id).setAttribute(""onclick"", ""graphSettings('"" + graph.id + ""')"");
                document.getElementById(""gc"" + graph.id).setAttribute(""onmouseup"", ""updadateGraphDimensions('"" + graph.id + ""')"");
            }
        }
    }

    function indicatorSettings(id) {
        buildIndicatorSettings(id);
    }
    function graphSettings(id) {
        buildGraphSettings(id);
    }
    function reloadGraph(id) {
        var graphId = id.substr(2);
        var graph = reportData.config.sheets.filter(function (x) { return x.order == sheetOrder })[0].graphs.filter(function (y) { return y.id == graphId })[0];
        switch (graph.objectType) {

            case 'bar': { buildBarChart(graph); break; }
            case 'pie': { buildPieChart(graph); break; }
            case 'line': { buildLineChart(graph); break; }
            case 'tree': { buildTr");
            WriteLiteral(@"eeMap(graph); break; }
            default: break;


        }
    }

    function buildSheetMenu() {
        var content = document.getElementById(""sheetList"");
        while (content.firstChild) {
            content.removeChild(content.lastChild);
        }

        var sheets = reportData.config.sheets;
        for (var i = 0; i < sheets.length; i++) {
            var liSheet = document.createElement(""li"");
            var aSheet = document.createElement(""a"");
            aSheet.appendChild(document.createTextNode(sheets[i].name));
            aSheet.setAttribute(""href"", ""#"");
            aSheet.setAttribute(""onclick"", ""changeSheet('"" + sheets[i].order + ""')"");
            liSheet.appendChild(aSheet);
            var editbutton = document.createElement(""button"");
            editbutton.innerHTML = ""Editar"";
            editbutton.setAttribute(""onclick"", ""buildSheetSettings('"" + sheets[i].id + ""')"");
            liSheet.appendChild(editbutton);
            document.getElementById(""");
            WriteLiteral(@"sheetList"").appendChild(liSheet);

        }

        var liAddSheet = document.createElement(""li"");
        var buttonSheet = document.createElement(""button"");
        buttonSheet.appendChild(document.createTextNode(""Nova Pasta""));
        buttonSheet.setAttribute(""href"", ""#"");
        buttonSheet.setAttribute(""onclick"", ""AddSheet()"");
        liAddSheet.appendChild(buttonSheet);
        document.getElementById(""sheetList"").appendChild(liAddSheet);


    }







    function loadUsingDataFrames() {


        usingDataFrames = JSON.parse(JSON.stringify(reportData.dataFrames));
    }


    function reloadSheet() {
        var graphs = document.getElementById(""Graphs"");
        while (graphs.firstChild) {
            graphs.removeChild(graphs.lastChild);
        }


        buildIndicators(currentSheet);
        buildGraphs(currentSheet);
    }

    function changeSheet(sheetOrder) {
        currentSheet = sheetOrder;
        reloadSheet();
        setObjEvents();
   ");
            WriteLiteral(" }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function GetReportData(){\r\n\r\n\r\n        $.ajax(\r\n            {\r\n                type: \'POST\',\r\n                url: \'Report/GetReportData?id=");
            EndContext();
            BeginContext(20365, 8, false);
#line 481 "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml"
                                         Write(Model.Id);

#line default
#line hidden
            EndContext();
            BeginContext(20373, 405, true);
            WriteLiteral(@"',
                dataType: 'json',
                cache: false,
                async: true,
                success: function (data) {

                    reportData = data;

                    init();
                }

            });


    }

    function SaveReport() {
        $.ajax(
            {
                type: 'POST',
                url: 'Editor/UploadConfig?id=");
            EndContext();
            BeginContext(20779, 8, false);
#line 501 "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml"
                                        Write(Model.Id);

#line default
#line hidden
            EndContext();
            BeginContext(20787, 300, true);
            WriteLiteral(@"',
                dataType: 'json',
                cache: false,
                async: true,
                success: function (data) {

                    alert(data);
                },
                data: reportData.config

            });
    }

    GetReportData();
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Terz.Models.Editor.EditorView> Html { get; private set; }
    }
}
#pragma warning restore 1591
