#pragma checksum "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4957e0f609d8df7751ba4c639cbedb11e7da517f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Editor_Index), @"mvc.1.0.view", @"/Views/Editor/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Editor/Index.cshtml", typeof(AspNetCore.Views_Editor_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\artur\source\repos\Terz\Terz\Views\_ViewImports.cshtml"
using Terz;

#line default
#line hidden
#line 2 "C:\Users\artur\source\repos\Terz\Terz\Views\_ViewImports.cshtml"
using Terz.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4957e0f609d8df7751ba4c639cbedb11e7da517f", @"/Views/Editor/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a2e29dedaf5a7a7167ab403312e09f21f298b081", @"/Views/_ViewImports.cshtml")]
    public class Views_Editor_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Terz.Models.Editor.EditorView>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/css/Editor.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/LTE/plugins/fontawesome-free/css/all.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/LTE/plugins/fontawesome-free/css/all.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/LTE/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/LTE/plugins/datatables-responsive/css/responsive.bootstrap4.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("margin-left:400px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("40"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("40"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/images/Terz_Logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/LTE/plugins/datatables/jquery.dataTables.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/LTE/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/LTE/plugins/datatables-responsive/js/dataTables.responsive.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/LTE/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Operations.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Variables.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Filter.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Indicator.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Graph.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/MapTimeLine.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Radar.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Pyramid.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/CompareChart.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Gaugi.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Variance.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Waterfall.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/LineDateCompareChart.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_27 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/Settings.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_28 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/js/TextBlock.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(158, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(160, 54, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "8a4c1ff219694e1b83321e1c770fed4c", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(214, 214, true);
            WriteLiteral("\r\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n<link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css\" rel=\"stylesheet\" />\r\n");
            EndContext();
            BeginContext(428, 82, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "a050509d5d38442898686895a1290c22", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(510, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(512, 78, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "5987c43aed10435db9de78a945209d35", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(590, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(592, 98, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "5a5b4fccc3314355b0ce68948d7da0af", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(690, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(692, 105, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "291e4899009949899895a579ac6a842e", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(797, 748, true);
            WriteLiteral(@"



<!-- Theme style -->

<style>
    #overlay {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5);
        z-index: 2;
        cursor: pointer;
    }

    #text {
        position: absolute;
        top: 50%;
        left: 50%;
        font-size: 30px;
        color: white;
        transform: translate(-50%,-50%);
        -ms-transform: translate(-50%,-50%);
    }
</style>

<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js""></script>

");
            EndContext();
            BeginContext(1545, 2212, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "312da9d0957a457cbce669afee68045b", async() => {
                BeginContext(1551, 1579, true);
                WriteLiteral(@"

    <div id=""overlay"">

        <div id=""text""><div style=""margin-left:22px"" class=""loader""></div>  <label id=""contentOverlay"">Calculando...</label></div>
    </div>
    <nav style=""position:fixed; z-index: 9999; background-color:white;width:100%"">
        <div id=""Menu"" style=""margin-left:5px;margin-top:0px;display:flex;border-bottom:2px solid #32bab6;padding-bottom:10px"">
            <div class=""dropdown"">
                <button style=""width:160px;height:50px;border:none;border-radius:0px"" class=""btn btn-primary dropdown-toggle"" type=""button"" data-toggle=""dropdown"">
                    Paginas
                    <span class=""caret""></span>
                </button>
                <ul id=""sheetList"" class=""dropdown-menu""></ul>
            </div>
            <button class=""menuButton"" onclick=""addIndicador()""><i class=""fas fa-tachometer-alt""></i> Indicador</button>
            <button class=""menuButton"" onclick=""AddGraph()""><i class=""fas fa-chart-pie""></i> Gráfico</button>
            <b");
                WriteLiteral(@"utton class=""menuButton"" onclick=""addTextBlock()""><i class=""fas fa-font""></i>  Texto</button>
            <button class=""menuButton"" onclick=""buildFilterSettings()""><i class=""fas fa-filter""></i> Filtros</button>
            <button class=""menuButton"" onclick=""buildOdagSettings()""><i class=""fas fa-calendar-check""></i> ODAG</button>
            <button class=""btn btn-block btn-success"" style=""font-size:19px;width:50px;height:50px;margin-left:0px;border-radius:0px;border:none"" onclick=""SaveReport()""><i class=""fas fa-save""></i></button>
            ");
                EndContext();
                BeginContext(3130, 90, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "80a8c411b6c24ce6aa69a10f3ab6b552", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3220, 530, true);
                WriteLiteral(@"
        </div>
    </nav>
    <div style=""height:65px"">

    </div>

    <div>
        <div id=""SheetContainer"">
            <div id=""Sheet"">
                <div id=""Graphs"" class=""resize-container""></div>
            </div>
        </div>
        <div id=""Settings""  style=""overflow-y: scroll; height:570px;background-color:white;padding-left:10px;padding-right:10px"">
            <label style=""width:100%;text-align:center;margin-top:270px;color:#b5b5b5"">Selecione um Objeto</label>
        </div>
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3757, 437, true);
            WriteLiteral(@"


<script src=""https://unpkg.com/mathjs/dist/math.min.js""></script>
<script language=""JavaScript"" src=""https://cdnjs.cloudflare.com/ajax/libs/mathjs/3.2.1/math.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/d3plus/2.0.0-alpha.14/d3plus.full.js""></script>
<script src=""https://d3js.org/d3-hierarchy.v1.min.js""></script>
<script type=""text/javascript"" src=""https://www.gstatic.com/charts/loader.js""></script>

");
            EndContext();
            BeginContext(4194, 78, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7eb176cca3814b34ae79b66dc067ca68", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4272, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(4274, 89, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bef208c7e13143f39b7364d8005e37d6", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4363, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(4365, 96, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c9c8cd2c91614f4590df1272f57d405e", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4461, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(4463, 96, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f90e34c0d87e498b9b4484a58446c8bd", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4559, 597, true);
            WriteLiteral(@"
<script src=""https://cdn.jsdelivr.net/npm/alasql@0.6""></script>
<!-- AdminLTE App -->

<script src=""https://cdn.amcharts.com/lib/4/core.js""></script>
<script src=""https://cdn.amcharts.com/lib/4/charts.js""></script>
<script src=""https://cdn.amcharts.com/lib/4/themes/animated.js""></script>
<script src=""https://cdn.amcharts.com/lib/4/maps.js""></script>
<script src=""https://cdn.amcharts.com/lib/4/geodata/worldLow.js""></script>
<script src=""https://covid.amCharts.com/data/js/world_timeline.js""></script>
<script src=""https://covid.amCharts.com/data/js/total_timeline.js""></script>


");
            EndContext();
            BeginContext(5156, 47, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5553aa0d35843b5b74bd65044e3441e", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5203, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5205, 46, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1845074a111642ff86a5ce26f3009121", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5251, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5253, 43, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ddabebe00eee4a05b58dac268202bd0d", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5296, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5298, 46, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8aceb71fcf664b9fbf4c49bdac62793d", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5344, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5346, 42, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "22a8e47150c84b6eb22f9cf177f0aa9a", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5388, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5390, 48, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c18a2c8ae8494947958908c7e36f69fa", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_19);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5438, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5440, 42, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d2f86af2184e4ec9ae20001036db37cb", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5482, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5484, 44, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d8876977b9f4c4ebc1ae6c25906aeeb", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5528, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5530, 49, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7c478d36499c40af8253d552c88b110a", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5579, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5581, 42, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6af183dc1c8446969cb2616045f60e98", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5623, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5625, 45, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2554f9361b5a48449f439a88aa8748f7", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5670, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5672, 46, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9c81b9e5a731427481635e1fb80429bf", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5718, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5720, 57, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "503830910b364e5797c0ccfd5e629ffe", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5777, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5779, 45, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d4fb0f06272475d9b20af8d53c69bee", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_27);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5824, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(5826, 46, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9d1a864326004be097bb18eedb606200", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_28);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(5872, 2832, true);
            WriteLiteral(@"

<script>

    var defaultDocumentHeight = document.body.scrollHeight;
    window.onscroll = function (oEvent) {
        if (document.body.scrollHeight > defaultDocumentHeight) {
            document.getElementById(""Settings"").style.marginTop = (window.scrollY) + ""px"";
        }
    }
    

</script>

<script type=""module"">
    import interact from
        'https://cdn.interactjs.io/v1.9.19/interactjs/index.js'

    function dragMoveListener(event) {
        var target = event.target
        // keep the dragged position in the data-x/data-y attributes
        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx
        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy

        // translate the element
        target.style.webkitTransform =
            target.style.transform =
            'translate(' + x + 'px, ' + y + 'px)'

        // update the posiion attributes
        target.setAttribute('data-x', x)
        target.setAttribute('data-y', y");
            WriteLiteral(@")
    }

    // this function is used later in the resizing and gesture demos
    window.dragMoveListener = dragMoveListener;

    interact('.resize-drag')
        .draggable({
            onmove: window.dragMoveListener
        })
        .resizable({
            preserveAspectRatio: false,
            edges: { left: true, right: true, bottom: true, top: true }
        })
        .on('resizemove', function (event) {
            var target = event.target,
                x = (parseFloat(target.getAttribute('data-x')) || 0),
                y = (parseFloat(target.getAttribute('data-y')) || 0);

            // update the element's style
            target.style.width = event.rect.width + 'px';
            target.style.height = event.rect.height + 'px';

            // translate when resizing from top or left edges
            x += event.deltaRect.left;
            y += event.deltaRect.top;

            target.style.webkitTransform = target.style.transform =
                'translate");
            WriteLiteral(@"(' + x + 'px,' + y + 'px)';

            target.setAttribute('data-x', x);
            target.setAttribute('data-y', y);

            //   target.textContent = event.rect.width + '×' + event.rect.height;
        });



</script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js""></script>
<script>
    function on(text) {
        document.getElementById(""overlay"").style.display = ""block"";
        document.getElementById(""contentOverlay"").innerHTML = text;
    }

    function off() {
        document.getElementById(""overlay"").style.display = ""none"";
    }

    function processOdag() {
        on(' Processando...');
        $.ajax(
            {
                type: 'POST',
                url: 'Odag/ProcessOdag?id=");
            EndContext();
            BeginContext(8705, 8, false);
#line 209 "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml"
                                     Write(Model.Id);

#line default
#line hidden
            EndContext();
            BeginContext(8713, 42897, true);
            WriteLiteral(@"',
                dataType: 'html',
                cache: false,
                async: true,
                success: function (data) {
                    off();
                    alert(data);
                },
                data: reportData.config.odag

            });
    }

    function rebaixarSheet(order) {

        if (parseInt(order) >= reportData.config.sheets.length) return;

        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(order.toString());
        var previousSheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf((parseInt(order) + 1).toString());
        reportData.config.sheets[sheetPos].order = (parseInt(order) + 1).toString();
        reportData.config.sheets[previousSheetPos].order = order.toString();

        if (order.toString() == currentSheet) {
            currentSheet = (parseInt(order) + 1).toString();
        }
        if ((parseInt(order) + 1).toString() == currentSheet) {
     ");
            WriteLiteral(@"       currentSheet = order.toString();
        }


        buildSheetMenu();
        
    }

    function promoverSheet(order) {
        if (order == '1') return;

        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(order.toString());
        var nextSheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf((parseInt(order) - 1).toString());
        reportData.config.sheets[sheetPos].order = (parseInt(order) - 1).toString();
        reportData.config.sheets[nextSheetPos].order = order.toString();

        if (order.toString() == currentSheet) {
            currentSheet = (parseInt(order) - 1).toString();
        }
        if ((parseInt(order) - 1).toString() == currentSheet) {
            currentSheet = order.toString();
        }

        buildSheetMenu();
    }

    function ExpMeasure(graphId, measureId) {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: 'Edito");
            WriteLiteral(@"r/MeasureExp?id=' + measureId,
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result) {

                            document.getElementById(""measureExp"" + measureId).value = document.getElementById(""measureExp"").value;
                            updateGraphConfig(graphId);


                        }

                    });

                },




            });
    }

    function ExpIndicator(id) {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: 'Editor/IndiacatorExp',
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
         ");
            WriteLiteral(@"               if (result) {

                            document.getElementById(""Expression"").value = document.getElementById(""indExp"").value;
                            updateIndicatorConfig(id);


                        }

                    });

                },




            });
    }

    function IconSelector(id) {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: 'Editor/EditIcon',
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result) {

                            document.getElementById(""Icone"").value = document.getElementById(""indicatorIcon"").value;
                            updateIndicatorConfig(id);
                           


                        }

                    });

       ");
            WriteLiteral(@"         },




            });
    }

    function ExpText(id) {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: 'Editor/TextExp',
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result) {

                            document.getElementById(""textarea"").value = document.getElementById(""textExp"").value;
                            updateTextBlockConfig(id);


                        }

                    });

                },




            });
    }

    function addIndicador() {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: 'Editor/AddIndicador',
                dataType: 'html',
                cache: false,
                async: true,

      ");
            WriteLiteral(@"          success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result) {

                            var indicador = {};
                            indicador[""id""] = Date.now().toString();
                            indicador[""dataFrameName""] = [document.getElementById(""DataFrameAdd"").value];
                            var style = {};
                            style[""id""] = Date.now().toString();
                            style[""width""] = document.getElementById(""WidthAdd"").value;
                            style[""height""] = document.getElementById(""HeightAdd"").value;
                            style[""x""] = document.getElementById(""XAdd"").value;
                            style[""y""] = document.getElementById(""YAdd"").value;
                            style[""backgroundColor""] = document.getElementById(""BackgroundColorAdd"").value;
                            style[""textColor""] = document.ge");
            WriteLiteral(@"tElementById(""TextColorAdd"").value;
                            style[""fontSize""] = document.getElementById(""FontSizeAdd"").value;

                            indicador[""style""] = style;

                            var measure = {};
                            measure[""id""] = Date.now().toString();
                            measure[""name""] = document.getElementById(""MeasureNameAdd"").value;
                            measure[""expresion""] = document.getElementById(""ExpressionAdd"").value;

                            indicador[""measure""] = measure;

                            var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);

                            if (reportData.config.sheets[sheetPos].indicadors == null) {
                                reportData.config.sheets[sheetPos].indicadors = [];
                            }

                            reportData.config.sheets[sheetPos].indicators.push(indicador);

                     ");
            WriteLiteral(@"       reloadSheet();
                            setObjEvents();

                        }

                    });

                },




            });
    }

    function addTextBlock() {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: 'Editor/AddTextBlock',
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result) {

                            var textBlock = {};
                            textBlock[""id""] = Date.now().toString();

                            var style = {};
                            style[""id""] = Date.now().toString();
                            style[""width""] = document.getElementById(""WidthAdd"").value;
                            style[""height""] = document.getElementById(""HeightAdd"").va");
            WriteLiteral(@"lue;
                            style[""x""] = document.getElementById(""XAdd"").value;
                            style[""y""] = document.getElementById(""YAdd"").value;


                            textBlock[""style""] = style;
                            textBlock[""text""] = document.getElementById(""TextAdd"").value;


                            var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);

                            if (reportData.config.sheets[sheetPos].textBlocks == null) {
                                reportData.config.sheets[sheetPos].textBlocks = [];
                            }

                            reportData.config.sheets[sheetPos].textBlocks.push(textBlock);

                            reloadSheet();
                            setObjEvents();

                        }

                    });

                },




            });
    }

    function AddGraph() {
        var form;
        $.ajax(
  ");
            WriteLiteral(@"          {
                type: 'POST',
                url: 'Editor/AddGraph',
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result) {

                            var graph = {};
                            graph[""id""] = Date.now().toString();
                            graph[""dataFrameName""] = [document.getElementById(""DataFrameAdd"").value];
                            graph[""title""] = document.getElementById(""TitleAdd"").value;
                            graph[""objectType""] = document.getElementById(""TipoAdd"").value;
                            var style = {};
                            style[""id""] = Date.now().toString();
                            style[""width""] = document.getElementById(""WidthAdd"").value;
                            style[""height""] = document.getEleme");
            WriteLiteral(@"ntById(""HeightAdd"").value;
                            style[""x""] = document.getElementById(""XAdd"").value;
                            style[""y""] = document.getElementById(""YAdd"").value;


                            graph[""style""] = style;

                            graph[""measures""] = [];
                            graph[""dimensions""] = [];



                            var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
                            if (reportData.config.sheets[sheetPos].graphs == null) {
                                reportData.config.sheets[sheetPos].graphs = [];
                            }
                            reportData.config.sheets[sheetPos].graphs.push(graph);

                            reloadSheet();
                            setObjEvents();

                        }

                    });

                },




            });
    }

    function copyGraph(id) {
        var shee");
            WriteLiteral(@"tPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var graphPos = reportData.config.sheets[sheetPos].graphs.map(function (e) { return e.id; }).indexOf(id);

        var cGraph = JSON.parse(JSON.stringify(reportData.config.sheets[sheetPos].graphs[graphPos]));
        cGraph.id = Date.now().toString();
        cGraph.style.id = Date.now().toString();
        cGraph.style.x = 10;
        cGraph.style.y = 10;

        reportData.config.sheets[sheetPos].graphs.push(cGraph);

        reloadSheet();
        setObjEvents();



    }

    function copyIndicator(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var indicatorPos = reportData.config.sheets[sheetPos].indicators.map(function (e) { return e.id; }).indexOf(id);

        var cIndicator = JSON.parse(JSON.stringify(reportData.config.sheets[sheetPos].indicators[indicatorPos]));
        cIndicator.id = Date.now().toStri");
            WriteLiteral(@"ng();
        cIndicator.style.id = Date.now().toString();
        cIndicator.style.x = 10;
        cIndicator.style.y = 10;

        reportData.config.sheets[sheetPos].indicators.push(cIndicator);

        reloadSheet();
        setObjEvents();



    }

    function copyTextBlock(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var textBlockPos = reportData.config.sheets[sheetPos].textBlocks.map(function (e) { return e.id; }).indexOf(id);

        var cTextBlock = JSON.parse(JSON.stringify(reportData.config.sheets[sheetPos].textBlocks[textBlockPos]));
        cTextBlock.id = Date.now().toString();
        cTextBlock.style.id = Date.now().toString();
        cTextBlock.style.x = 10;
        cTextBlock.style.y = 10;

        reportData.config.sheets[sheetPos].textBlocks.push(cTextBlock);

        reloadSheet();
        setObjEvents();



    }

    function copySheet(id) {
        var sheetPos = reportD");
            WriteLiteral(@"ata.config.sheets.map(function (e) { return e.order; }).indexOf(id);
        var cSheet = JSON.parse(JSON.stringify(reportData.config.sheets[sheetPos]));
        cSheet.id = Date.now().toString();
        cSheet.order = (reportData.config.sheets.length + 1).toString();

        reportData.config.sheets.push(cSheet);
        buildSheetMenu();

    }

    function AddSheet() {
        var sheet = {}
        sheet[""id""] = Date.now().toString();
        sheet[""name""] = ""Nova Pasta"";
        sheet[""order""] = (reportData.config.sheets.length + 1).toString();
        sheet[""graphs""] = [];
        sheet[""indicators""] = [];
        sheet[""filters""] = [];

        reportData.config.sheets.push(sheet);
        buildSheetMenu();
        changeSheet(sheet[""order""]);

    }

    var ConfigBackup;

      function init() {
        loadUsingDataFrames();
        buildSheetMenu();
        buildIndicators(currentSheet);
          buildGraphs(currentSheet);
          buildTextBlocks(currentSheet);");
            WriteLiteral(@"
          setObjEvents();
          ConfigBackup = JSON.parse(JSON.stringify(reportData.config));

    }


    function updateSheetConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.id; }).indexOf(id);

        if (reportData.config.sheets[sheetPos].style == null) {
            reportData.config.sheets[sheetPos].style = {};
        }

        reportData.config.sheets[sheetPos].name = document.getElementById(""sheetName"").value;
        reportData.config.sheets[sheetPos].style.backgroundColor = document.getElementById(""BackgroundColor"").value;
        buildSheetMenu();


    }

    function updateFilterConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var filterPos = reportData.config.sheets[sheetPos].filters.map(function (e) { return e.id; }).indexOf(id);

        var dfOptions = document.getElementsByName(""DataFrame"" + id);
        var selectedDFs = [];
        for ");
            WriteLiteral(@"(var i = 0; i < dfOptions.length; i++) {

            if (dfOptions[i].checked) {
                selectedDFs.push(dfOptions[i].value);
            }
        }

        reportData.config.sheets[sheetPos].filters[filterPos].dataFrameName = selectedDFs;



        reportData.config.sheets[sheetPos].filters[filterPos].dimension.name = document.getElementById(""filterName"" + id).value;
        reportData.config.sheets[sheetPos].filters[filterPos].dimension.field = document.getElementById(""filterField"" + id).value;
        reportData.config.sheets[sheetPos].filters[filterPos].defaultValues = document.getElementById(""filterDValues"" + id).value;
        buildFilterSettings();
    }

    function setOdagActive() {
        reportData.config.odag.active = document.getElementById(""OdagActive"").checked;
        buildOdagSettings();
    }

    function updateOdagConfig(name) {
       
        var filterPos = reportData.config.odag.odagFields.map(function (e) { return e.name; }).indexOf(name);

   ");
            WriteLiteral(@"     var dfOptions = document.getElementsByName(""DataFrame"" + name);
        var selectedDFs = [];
        for (var i = 0; i < dfOptions.length; i++) {

            if (dfOptions[i].checked) {
                selectedDFs.push(dfOptions[i].value);
            }
        }

        reportData.config.odag.odagFields[filterPos].dataFrames = selectedDFs;



        reportData.config.odag.odagFields[filterPos].name = document.getElementById(""OdagName"" + name).value;
        reportData.config.odag.odagFields[filterPos].field = document.getElementById(""OdagField"" + name).value;
        reportData.config.odag.odagFields[filterPos].maxValues = document.getElementById(""OdagMaxValue"" + name).value;
        buildOdagSettings();
    }

    function updateIndicatorDataFrame(id) {
        var dfOptions = document.getElementsByName(""DataFrame"");
        var selectedDFs = [];
        for (var i = 0; i < dfOptions.length; i++) {

            if (dfOptions[i].checked) {
                selectedDFs.push(df");
            WriteLiteral(@"Options[i].value);
            }
        }
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var indicatorPos = reportData.config.sheets[sheetPos].indicators.map(function (e) { return e.id; }).indexOf(id);
        reportData.config.sheets[sheetPos].indicators[indicatorPos].dataFrameName = selectedDFs;

        loadUsingDataFrames();
        updateIndicatorConfig(id);

    }

    function updateIndicatorConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var indicatorPos = reportData.config.sheets[sheetPos].indicators.map(function (e) { return e.id; }).indexOf(id);

        reportData.config.sheets[sheetPos].indicators[indicatorPos].navigateTo = document.getElementById(""Navigation"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].icon = document.getElementById(""Icone"").value;
        reportData.config.sheets[sheetPos].indic");
            WriteLiteral(@"ators[indicatorPos].measure.name = document.getElementById(""MeasureName"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].measure.expresion = document.getElementById(""Expression"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].measure.numberFormat = document.getElementById(""Format"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.width = document.getElementById(""Width"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.height = document.getElementById(""Height"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.x = document.getElementById(""X"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.y = document.getElementById(""Y"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.backgroundColor = document.getElementById(""BackgroundColor"").value;
        reportData.config.sheets[sheetPos].indicators[");
            WriteLiteral(@"indicatorPos].style.textColor = document.getElementById(""TextColor"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.fontSize = document.getElementById(""FontSize"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.borderColor = document.getElementById(""BorderColor"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.borderThickness = document.getElementById(""BordeThickness"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.borderRadius = document.getElementById(""BordeRadius"").value;


        reloadSheet();
        setObjEvents();
    }

    function updateTextBlockConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var textBlockPos = reportData.config.sheets[sheetPos].textBlocks.map(function (e) { return e.id; }).indexOf(id);

        reportData.config.sheets[sheetPos].textBlocks[textBlockPos]");
            WriteLiteral(@".title = document.getElementById(""Title"").value;
        reportData.config.sheets[sheetPos].textBlocks[textBlockPos].text = document.getElementById(""textarea"").value;
        reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.width = document.getElementById(""Width"").value;
        reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.height = document.getElementById(""Height"").value;
        reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.x = document.getElementById(""X"").value;
        reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.y = document.getElementById(""Y"").value;
        reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.backgroundColor = document.getElementById(""BackgroundColor"").value;

        reloadSheet();
        setObjEvents();
    }



    function updateIndicatorDimensions(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var in");
            WriteLiteral(@"dicatorPos = reportData.config.sheets[sheetPos].indicators.map(function (e) { return e.id; }).indexOf(id);
        var transform = document.getElementById(""ind"" + id).style.transform.replace('translate', '').replace('(', '').replace(')', '').replace('px', '').replace('px', '').split(',');

        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.width = parseInt(document.getElementById(""ind"" + id).style.width);
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.height = parseInt(document.getElementById(""ind"" + id).style.height);
        if (transform != """" && transform != null) {
            var x = parseInt(reportData.config.sheets[sheetPos].indicators[indicatorPos].style.x) + parseInt(transform[0]);
            reportData.config.sheets[sheetPos].indicators[indicatorPos].style.x = x.toString();
            var y = parseInt(reportData.config.sheets[sheetPos].indicators[indicatorPos].style.y) + parseInt(transform[1]);
            reportData.config.sheets[sheetPo");
            WriteLiteral(@"s].indicators[indicatorPos].style.y = y.toString();
        }
       reloadSheet();
        setObjEvents();
        buildIndicatorSettings(id);
    }

    function updateGraphDimensions(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var graphPos = reportData.config.sheets[sheetPos].graphs.map(function (e) { return e.id; }).indexOf(id);
        var transform = document.getElementById(""gc"" + id).style.transform.replace('translate', '').replace('(', '').replace(')', '').replace('px', '').replace('px', '').split(',');

        reportData.config.sheets[sheetPos].graphs[graphPos].style.width = parseInt(document.getElementById(""gc"" + id).style.width);
        reportData.config.sheets[sheetPos].graphs[graphPos].style.height = parseInt(document.getElementById(""gc"" + id).style.height);
        if (transform != """" && transform != null) {
            var x = parseInt(reportData.config.sheets[sheetPos].graphs[graphPos].style.x) + pa");
            WriteLiteral(@"rseInt(transform[0]);
            reportData.config.sheets[sheetPos].graphs[graphPos].style.x = x.toString();
            var y = parseInt(reportData.config.sheets[sheetPos].graphs[graphPos].style.y) + parseInt(transform[1]);
            reportData.config.sheets[sheetPos].graphs[graphPos].style.y = y.toString();
        }

        reloadSheet();
        setObjEvents();
        buildGraphSettings(id);
    }

    function updateTextBlockDimensions(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var textBlockPos = reportData.config.sheets[sheetPos].textBlocks.map(function (e) { return e.id; }).indexOf(id);
        var transform = document.getElementById(""txt"" + id).style.transform.replace('translate', '').replace('(', '').replace(')', '').replace('px', '').replace('px', '').split(',');

        reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.width = parseInt(document.getElementById(""txt"" + id).style.width");
            WriteLiteral(@");
        reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.height = parseInt(document.getElementById(""txt"" + id).style.height);
        if (transform != """" && transform != null) {
            var x = parseInt(reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.x) + parseInt(transform[0]);
            reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.x = x.toString();
            var y = parseInt(reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.y) + parseInt(transform[1]);
            reportData.config.sheets[sheetPos].textBlocks[textBlockPos].style.y = y.toString();
        }

        reloadSheet();
        setObjEvents();
        buildTextBlockSettings(id);
    }

    function updateGraphDataFrame(id) {
        on(' Calculando...');
        var dfOptions = document.getElementsByName(""DataFrame"");
        var selectedDFs = [];
        for (var i = 0; i < dfOptions.length; i++) {

            if (dfOptions[i].checked) {
     ");
            WriteLiteral(@"           selectedDFs.push(dfOptions[i].value);
            }
        }
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var graphPos = reportData.config.sheets[sheetPos].graphs.map(function (e) { return e.id; }).indexOf(id);
        reportData.config.sheets[sheetPos].graphs[graphPos].dataFrameName = selectedDFs;

        loadUsingDataFrames();
        updateGraphConfig(id);
        off();
    }

    function updateGraphConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var graphPos = reportData.config.sheets[sheetPos].graphs.map(function (e) { return e.id; }).indexOf(id);

        if (document.getElementById(""ExecuteMode"").checked) {
            reportData.config.sheets[sheetPos].graphs[graphPos].executeMode = ""1"";
        }
        else {
            reportData.config.sheets[sheetPos].graphs[graphPos].executeMode = ""0"";
        }
        
");
            WriteLiteral(@"        reportData.config.sheets[sheetPos].graphs[graphPos].title = document.getElementById(""Title"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.width = document.getElementById(""Width"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.height = document.getElementById(""Height"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.x = document.getElementById(""X"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.y = document.getElementById(""Y"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.backgroundColor = document.getElementById(""BackgroundColor"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.colorList = document.getElementById(""ColorList"").value;

        if (reportData.config.sheets[sheetPos].graphs[graphPos].objectType == 'map') {
            reportData.config.sheets[sheetPos].graphs[graphPos].style.region = document.getElementById(""Region"").value;
");
            WriteLiteral(@"        }

        if (reportData.config.sheets[sheetPos].graphs[graphPos].objectType == 'bar') {
            reportData.config.sheets[sheetPos].graphs[graphPos].style.orientation = document.getElementById(""Orientation"").value;
            reportData.config.sheets[sheetPos].graphs[graphPos].style.stack = document.getElementById(""Stack"").checked;
        }


        for (var i = 0; i < reportData.config.sheets[sheetPos].graphs[graphPos].dimensions.length; i++) {
            var dimId = reportData.config.sheets[sheetPos].graphs[graphPos].dimensions[i].id;
            reportData.config.sheets[sheetPos].graphs[graphPos].dimensions[i].name = document.getElementById(""dimname"" + dimId).value;
            reportData.config.sheets[sheetPos].graphs[graphPos].dimensions[i].field = document.getElementById(""dimfield"" + dimId).value;
        }

        for (var i = 0; i < reportData.config.sheets[sheetPos].graphs[graphPos].measures.length; i++) {
            var measureId = reportData.config.sheets[sheetPos]");
            WriteLiteral(@".graphs[graphPos].measures[i].id;
            reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].name = document.getElementById(""measureName"" + measureId).value;
            reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].expresion = document.getElementById(""measureExp"" + measureId).value;
            reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].numberFormat = document.getElementById(""FormatMeasure"" + measureId).value;
            reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].color = document.getElementById(""MeasureColor"" + measureId).value;
        }




        reportData.config.sheets[sheetPos].graphs[graphPos].sort = {

            type: document.getElementById(""SortType"").value,
            option: document.getElementById(""SortOption"").value,
            axis: document.getElementById(""SortAxis"").value
        };

        switch (reportData.config.sheets[sheetPos].graphs[graphPos].objectType) {
            case 'bar': { up");
            WriteLiteral(@"dateBarChart(sheetPos, graphPos); break; }
            case 'pie': { updatePieChart(sheetPos, graphPos); break; }
            case 'line': { updateLineChart(sheetPos, graphPos); break; }
            case 'tree': { updateTreeMap(sheetPos, graphPos); break; }
            default: break;
        }

        reloadSheet();
        setObjEvents();
    }

    function updateBarChart(sheetPos, graphPos) {


    }

    function updatePieChart(sheetPos, graphPos) {

    }

    function updateLineChart(sheetPos, graphPos) {

    }

    function updateTreeMap(sheetPos, graphPos) {

    }


    function setObjEvents() {
        var sheets = reportData.config.sheets.filter(function (x) { return x.order == currentSheet });
        var sLenght;
        if (sheets == null) {
            sLenght = 0;
        }
        else {
            sLenght = sheets.length;
        }
        for (var i = 0; i < sLenght; i++) {
            var sheet = sheets[i];
            //indicator
            va");
            WriteLiteral(@"r indicators = sheet.indicators;
            var iLenght;
            if (indicators == null) {
                iLenght = 0;
            }
            else {
                iLenght = indicators.length;
            }
            for (var j = 0; j < iLenght; j++) {
                var indicator = indicators[j];
                document.getElementById(""ind"" + indicator.id).setAttribute(""onclick"", ""indicatorSettings('"" + indicator.id + ""')"");
                document.getElementById(""ind"" + indicator.id).setAttribute(""onmouseup"", ""updateIndicatorDimensions('"" + indicator.id + ""')"");
            }
            //graph
            var graphs = sheet.graphs;
            var gLenght;
            if (graphs == null) {
                gLenght = 0;
            }
            else {
                gLenght = graphs.length;
            }
            for (var j = 0; j < gLenght; j++) {
                var graph = graphs[j];
                document.getElementById(""gc"" + graph.id).setAttribute(""onclick");
            WriteLiteral(@""", ""graphSettings('"" + graph.id + ""')"");
                document.getElementById(""gc"" + graph.id).setAttribute(""onmouseup"", ""updateGraphDimensions('"" + graph.id + ""')"");
            }

            //txt
            var textBlocks = sheet.textBlocks;
            var tLenght;
            if (textBlocks == null) {
                tLenght = 0;
            }
            else {
                tLenght = textBlocks.length;
            }
            for (var j = 0; j < tLenght; j++) {
                var textBlock = textBlocks[j];
                document.getElementById(""txt"" + textBlock.id).setAttribute(""onclick"", ""textBlockSettings('"" + textBlock.id + ""')"");
                document.getElementById(""txt"" + textBlock.id).setAttribute(""onmouseup"", ""updateTextBlockDimensions('"" + textBlock.id + ""')"");
            }

        }
    }

    function indicatorSettings(id) {
        buildIndicatorSettings(id);
    }
    function graphSettings(id) {
        buildGraphSettings(id);
    }
    functio");
            WriteLiteral(@"n textBlockSettings(id) {
        buildTextBlockSettings(id);
    }
    function reloadGraph(id) {
        var graphId = id.substr(2);
        var graph = reportData.config.sheets.filter(function (x) { return x.order == sheetOrder })[0].graphs.filter(function (y) { return y.id == graphId })[0];
        switch (graph.objectType) {

            case 'bar': { buildBarChart(graph); break; }
            case 'pie': { buildPieChart(graph); break; }
            case 'line': { buildLineChart(graph); break; }
            case 'tree': { buildTreeMap(graph); break; }
            case 'network': { buildNetWorkGraph(graph); break; }
            case 'table': { buildTable(graph); break; }
            case 'bubble': { buildBubbleChart(graph); break; }
            case 'map': { buildMapChart(graph); break; }
            case 'sankey': { buildSankeyChart(graph); break; }
            case 'org': { buildOrgChart(graph); break; }
            default: break;


        }
    }

    function buildSheetMenu()");
            WriteLiteral(@" {
        var content = document.getElementById(""sheetList"");
        while (content.firstChild) {
            content.removeChild(content.lastChild);
        }

        var sheets = reportData.config.sheets.sort(function (a, b) {
            return parseInt(a.order) - parseInt(b.order);
        });
        var sheetBody = document.createElement(""div"");
        sheetBody.style.overflowY = ""auto"";
        sheetBody.style.maxHeight = ""450px"";
        for (var i = 0; i < sheets.length; i++) {
            var liSheet = document.createElement(""li"");
            liSheet.style.width = ""300px"";
            liSheet.style.borderBottom = ""1px solid black"";
            var divSheet = document.createElement(""div"");
            divSheet.style.display = ""flex"";
            var aSheet = document.createElement(""a"");
            aSheet.setAttribute(""class"", ""btn btn-block btn-secondary btn-sm"");
            aSheet.style.marginLeft = ""10px"";
            aSheet.style.width = ""200px"";
            
        ");
            WriteLiteral(@"    aSheet.appendChild(document.createTextNode(sheets[i].name));
            aSheet.setAttribute(""href"", ""#"");
            aSheet.setAttribute(""onclick"", ""changeSheet('"" + sheets[i].order + ""')"");
            divSheet.appendChild(aSheet);
            var editbutton = document.createElement(""button"");
            var editIcon = document.createElement(""i"");
            editIcon.setAttribute(""class"", ""fa fa-edit"");
            editbutton.appendChild(editIcon);
            editbutton.style.width = ""30px"";
            editbutton.style.marginLeft = ""10px"";
            editbutton.style.border = ""none"";
            editbutton.style.backgroundColor = ""white"";
            editbutton.setAttribute(""onclick"", ""buildSheetSettings('"" + sheets[i].id + ""')"");

            divSheet.appendChild(editbutton);

            var promote = document.createElement(""a"");
            promote.setAttribute(""onclick"", ""promoverSheet("" + sheets[i].order + "")"");
            promote.setAttribute(""href"", ""#"");
            pro");
            WriteLiteral(@"mote.style.textDecoration = ""none"";
            promote.style.fontSize = ""18px"";
            var iPromote = document.createElement(""i"");
            iPromote.setAttribute(""class"", ""fas fa-chevron-up"");
            promote.appendChild(iPromote);
            divSheet.appendChild(promote);

            var decline = document.createElement(""a"");
            decline.setAttribute(""onclick"", ""rebaixarSheet("" + sheets[i].order + "")"");
            decline.setAttribute(""href"", ""#"");
            decline.style.textDecoration = ""none"";
            decline.style.fontSize = ""18px"";
            decline.style.marginLeft = ""5px"";
            var iDecline = document.createElement(""i"");
            iDecline.setAttribute(""class"", ""fas fa-chevron-down"");
            decline.appendChild(iDecline);
            divSheet.appendChild(decline);
            liSheet.appendChild(divSheet);
            sheetBody.appendChild(liSheet)
            

        }
        document.getElementById(""sheetList"").appendChild(sheetB");
            WriteLiteral(@"ody);

        var liAddSheet = document.createElement(""li"");
        var buttonSheet = document.createElement(""button"");
        buttonSheet.appendChild(document.createTextNode(""Nova Pasta""));
        buttonSheet.setAttribute(""href"", ""#"");
        buttonSheet.setAttribute(""onclick"", ""AddSheet()"");
        buttonSheet.setAttribute(""class"", ""btn btn-block btn-info btn-sm"");
        buttonSheet.style.margin = ""10px"";
        buttonSheet.style.width = ""90%"";
        liAddSheet.appendChild(buttonSheet);
        document.getElementById(""sheetList"").appendChild(liAddSheet);


    }







    function loadUsingDataFrames() {
        console.log(""init"");
        AllDFS = JSON.parse(JSON.stringify(reportData.dataFrames));
        for (var i = 0; i < reportData.config.sheets.length; i++) {
            for (var j = 0; j < reportData.config.sheets[i].indicators.length; j++) {
                var df = reportData.config.sheets[i].indicators[j].dataFrameName;
                var dfs = df.join("",");
            WriteLiteral(@""");
                console.log(df);
                console.log(dfs);
                if (df.length > 1 && AllDFS.findIndex(i => i.name == dfs) == -1) {
                    var group = {};
                    group[""name""] = dfs;
                    var table = JSON.parse(JSON.stringify(AllDFS.filter(function (x) { return x.name == df[0] })[0].table));
                    for (var k = 1; k < df.length; k++) {
                        table = fulljoin(table, JSON.parse(JSON.stringify(AllDFS.filter(function (x) { return x.name == df[k] })[0].table)));
                    }
                    group[""table""] = table;
                    console.log(""group"" + group);
                    AllDFS.push(group);
                }

                let pattern = /[^\s]+\.externalDF\(.+?\)/g;
                let res = pattern.exec(reportData.config.sheets[i].indicators[j].measure.expression);
                while (res != null) {
                    var eExpression = res[0];
                    let ePat");
            WriteLiteral(@"tern = /externalDF\(.+?\)/g;
                    let eRes = ePattern.exec(eExpression)[0];
                    var edfs = eRes.replace('externalDF(', '').replace(')', '');
                    var edfNames = edfs.split(',');
                    if (AllDFS.findIndex(i => i.name == edfs) == -1) {
                        var group = {};
                        group[""name""] = edfs;
                        var table = JSON.parse(JSON.stringify(AllDFS.filter(function (x) { return x.name == edfNames[0] })[0].table));
                        for (var k = 1; k < edfNames.length; k++) {
                            table = fulljoin(table, JSON.parse(JSON.stringify(AllDFS.filter(function (x) { return x.name == edfNames[k] })[0].table)));
                        }
                        group[""table""] = table;
                        AllDFS.push(group);
                    }


                    res = pattern.exec(expression);
                }
            }



            for (var j = 0; j < repor");
            WriteLiteral(@"tData.config.sheets[i].graphs.length; j++) {
                var df = reportData.config.sheets[i].graphs[j].dataFrameName;
                var dfs = df.join("","");
                if (df.length > 1 && AllDFS.findIndex(i => i.name == dfs) == -1) {
                    var group = {};
                    group[""name""] = dfs;
                    var table = JSON.parse(JSON.stringify(AllDFS.filter(function (x) { return x.name == df[0] })[0].table));
                    for (var k = 1; k < df.length; k++) {
                        table = fulljoin(table, JSON.parse(JSON.stringify(AllDFS.filter(function (x) { return x.name == df[k] })[0].table)));
                    }
                    group[""table""] = table;
                    AllDFS.push(group);
                }

                for (l = 0; l < reportData.config.sheets[i].graphs[j].measures.length; l++) {
                    let pattern = /[^\s]+\.externalDF\(.+?\)/g;
                    let res = pattern.exec(reportData.config.sheets[i].graphs");
            WriteLiteral(@"[j].measures[l].expression);
                    while (res != null) {
                        var eExpression = res[0];
                        let ePattern = /externalDF\(.+?\)/g;
                        let eRes = ePattern.exec(eExpression)[0];
                        var edfs = eRes.replace('externalDF(', '').replace(')', '');
                        var edfNames = edfs.split(',');
                        if (AllDFS.findIndex(i => i.name == edfs) == -1) {
                            var group = {};
                            group[""name""] = edfs;
                            var table = JSON.parse(JSON.stringify(AllDFS.filter(function (x) { return x.name == edfNames[0] })[0].table));
                            for (var k = 1; k < edfNames.length; k++) {
                                table = fulljoin(table, JSON.parse(JSON.stringify(AllDFS.filter(function (x) { return x.name == edfNames[k] })[0].table)));
                            }
                            group[""table""] = table;
  ");
            WriteLiteral(@"                          AllDFS.push(group);
                        }


                        res = pattern.exec(expression);
                    }
                }
            }


        }
        usingDataFrames = JSON.parse(JSON.stringify(AllDFS));
    }


    function reloadSheet() {
        var graphs = document.getElementById(""Graphs"");
        while (graphs.firstChild) {
            graphs.removeChild(graphs.lastChild);
        }


        buildIndicators(currentSheet);
        buildGraphs(currentSheet);
        buildTextBlocks(currentSheet);
    }

    function changeSheet(sheetOrder) {
        currentSheet = sheetOrder;
        reloadSheet();
        setObjEvents();
    }






    function GetReportData(){
        on(' Carregando...');

        $.ajax(
            {
                type: 'POST',
                url: 'Editor/GetReportData?id=");
            EndContext();
            BeginContext(51611, 8, false);
#line 1232 "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml"
                                         Write(Model.Id);

#line default
#line hidden
            EndContext();
            BeginContext(51619, 462, true);
            WriteLiteral(@"',
                dataType: 'json',
                cache: false,
                async: true,
                success: function (data) {

                    reportData = data;

                    init();
                    off();
                }

            });


    }

    function SaveReport() {
        on(' Salvando...');
        $.ajax(
            {
                type: 'POST',
                url: 'Editor/UploadConfig?id=");
            EndContext();
            BeginContext(52082, 8, false);
#line 1254 "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml"
                                        Write(Model.Id);

#line default
#line hidden
            EndContext();
            BeginContext(52090, 326, true);
            WriteLiteral(@"',
                dataType: 'html',
                cache: false,
                async: true,
                success: function (data) {
                    off();
                    alert(data);
                },
                data: reportData.config

            });
    }

    GetReportData();
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Terz.Models.Editor.EditorView> Html { get; private set; }
    }
}
#pragma warning restore 1591
