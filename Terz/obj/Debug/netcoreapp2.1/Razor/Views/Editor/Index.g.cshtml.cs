#pragma checksum "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "70d3a32a69e8254a7be0aef92c02afe299202bbb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Editor_Index), @"mvc.1.0.view", @"/Views/Editor/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Editor/Index.cshtml", typeof(AspNetCore.Views_Editor_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\artur\source\repos\Terz\Terz\Views\_ViewImports.cshtml"
using Terz;

#line default
#line hidden
#line 2 "C:\Users\artur\source\repos\Terz\Terz\Views\_ViewImports.cshtml"
using Terz.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"70d3a32a69e8254a7be0aef92c02afe299202bbb", @"/Views/Editor/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a2e29dedaf5a7a7167ab403312e09f21f298b081", @"/Views/_ViewImports.cshtml")]
    public class Views_Editor_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Terz.Models.Editor.EditorView>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Editor.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/LTE/plugins/fontawesome-free/css/all.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/LTE/plugins/fontawesome-free/css/all.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("margin-left:400px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("40"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("40"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Terz_Logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Operations.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Variables.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Filter.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Indicator.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Graph.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Settings.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(158, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(160, 49, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "827f1e9b1d964cf1b5a7fe54013be16d", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(209, 104, true);
            WriteLiteral("\r\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
            EndContext();
            BeginContext(313, 77, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "2559b5f159134a86bfd194a86513e868", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(390, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(392, 73, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "243420ba897741be887cfa0e94c46d00", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(465, 1045, true);
            WriteLiteral(@"
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js""></script>

<div id=""Menu"" style=""margin-left:5px;margin-top:10px;display:flex;border-bottom:2px solid #32bab6;padding-bottom:10px"">
    <div class=""dropdown"">
        <button style=""width:160px;height:40px;"" class=""btn btn-primary dropdown-toggle"" type=""button"" data-toggle=""dropdown"">
            Paginas
            <span class=""caret""></span>
        </button>
        <ul id=""sheetList"" class=""dropdown-menu""></ul>
    </div>
    <button class=""menuButton"" onclick=""addIndicador()""><i class=""fas fa-tachometer-alt""></i> Indicador</button>
    <button class=""menuButton"" onclick=""AddGraph()""><i class=""fas fa-chart-pie""></i> Gráfico</button>
    <button class=""menuButton"" onclick=""buildFilterSettings()""><i class=""fas fa-filter""></i> Filtros</button>
    <button class=""menuButton"" onclick=""SaveReport()""><i class=""fas fa-save""></i> ");
            WriteLiteral("Salvar</button>\r\n    ");
            EndContext();
            BeginContext(1510, 85, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "eeefb9e45341498ba6abbf863e9cf9cf", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1595, 619, true);
            WriteLiteral(@"
</div>
<div id=""Pages"" style=""margin-left:15px;margin-top:10px;"">
    
</div>
<div>
    <div id=""Sheet"">
        <div id=""Graphs"" class=""resize-container""></div>
    </div>
    <div id=""Settings"" overflow-y: scroll; style=""height:700px"">

    </div>
</div>



<script src=""https://unpkg.com/mathjs/dist/math.min.js""></script>
<script language=""JavaScript"" src=""https://cdnjs.cloudflare.com/ajax/libs/mathjs/3.2.1/math.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/d3plus/2.0.0-alpha.14/d3plus.full.js""></script>
<script src=""https://d3js.org/d3-hierarchy.v1.min.js""></script>

");
            EndContext();
            BeginContext(2214, 42, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4db75ff43aa4b2289cefe3f39f85821", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2256, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(2258, 41, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f358ab1ebd1343b5913b59e33719d492", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2299, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(2301, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "af9976a379e94297a5654af486ecf368", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2339, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(2341, 41, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "aeef8bff7476469099f820358f0692c8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2382, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(2384, 37, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d30a1d38fce4457afaa10aaaea20e94", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2421, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(2423, 40, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ce97e95504514420a71cbe4b9ae2bf42", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(2463, 19312, true);
            WriteLiteral(@"
<script type=""module"">
    import interact from
        'https://cdn.interactjs.io/v1.9.19/interactjs/index.js'

    function dragMoveListener(event) {
        var target = event.target
        // keep the dragged position in the data-x/data-y attributes
        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx
        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy

        // translate the element
        target.style.webkitTransform =
            target.style.transform =
            'translate(' + x + 'px, ' + y + 'px)'

        // update the posiion attributes
        target.setAttribute('data-x', x)
        target.setAttribute('data-y', y)
    }

    // this function is used later in the resizing and gesture demos
    window.dragMoveListener = dragMoveListener;

    interact('.resize-drag')
        .draggable({
            onmove: window.dragMoveListener
        })
        .resizable({
            preserveAspectRatio: false,
           ");
            WriteLiteral(@" edges: { left: true, right: true, bottom: true, top: true }
        })
        .on('resizemove', function (event) {
            var target = event.target,
                x = (parseFloat(target.getAttribute('data-x')) || 0),
                y = (parseFloat(target.getAttribute('data-y')) || 0);

            // update the element's style
            target.style.width = event.rect.width + 'px';
            target.style.height = event.rect.height + 'px';

            // translate when resizing from top or left edges
            x += event.deltaRect.left;
            y += event.deltaRect.top;

            target.style.webkitTransform = target.style.transform =
                'translate(' + x + 'px,' + y + 'px)';

            target.setAttribute('data-x', x);
            target.setAttribute('data-y', y);

            //   target.textContent = event.rect.width + '×' + event.rect.height;
        });



</script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox");
            WriteLiteral(@".min.js""></script>
<script>

    function addIndicador() {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: '../Editor/AddIndicador',
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result) {

                            var indicador = {};
                            indicador[""id""] = Date.now().toString();
                            indicador[""dataFrameName""] = document.getElementById(""DataFrameAdd"").value;
                            var style = {};
                            style[""id""] = Date.now().toString();
                            style[""width""] = document.getElementById(""WidthAdd"").value;
                            style[""height""] = document.getElementById(""HeightAdd"").value;
                            style[""x");
            WriteLiteral(@"""] = document.getElementById(""XAdd"").value;
                            style[""y""] = document.getElementById(""YAdd"").value;
                            style[""backgroundColor""] = document.getElementById(""BackgroundColorAdd"").value;
                            style[""textColor""] = document.getElementById(""TextColorAdd"").value;
                            style[""fontSize""] = document.getElementById(""FontSizeAdd"").value;

                            indicador[""style""] = style;

                            var measure = {};
                            measure[""id""] = Date.now().toString();
                            measure[""name""] = document.getElementById(""MeasureNameAdd"").value;
                            measure[""expresion""] = document.getElementById(""ExpressionAdd"").value;

                            indicador[""measure""] = measure;

                            var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
                            re");
            WriteLiteral(@"portData.config.sheets[sheetPos].indicators.push(indicador);

                            reloadSheet();
                            setObjEvents();

                        }

                    });

                },




            });
    }

    function AddGraph() {
        var form;
        $.ajax(
            {
                type: 'POST',
                url: '../Editor/AddGraph',
                dataType: 'html',
                cache: false,
                async: true,

                success: function (data) {
                    form = data;
                    bootbox.confirm(form, function (result) {
                        if (result) {

                            var graph = {};
                            graph[""id""] = Date.now().toString();
                            graph[""dataFrameName""] = document.getElementById(""DataFrameAdd"").value;
                            graph[""title""] = document.getElementById(""TitleAdd"").value;
                         ");
            WriteLiteral(@"   graph[""objectType""] = document.getElementById(""TipoAdd"").value;
                            var style = {};
                            style[""id""] = Date.now().toString();
                            style[""width""] = document.getElementById(""WidthAdd"").value;
                            style[""height""] = document.getElementById(""HeightAdd"").value;
                            style[""x""] = document.getElementById(""XAdd"").value;
                            style[""y""] = document.getElementById(""YAdd"").value;


                            graph[""style""] = style;

                            graph[""measures""] = [];
                            graph[""dimensions""] = [];



                            var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
                            reportData.config.sheets[sheetPos].graphs.push(graph);

                            reloadSheet();
                            setObjEvents();

                       ");
            WriteLiteral(@" }

                    });

                },




            });
    }

    function AddSheet() {
        var sheet = {}
        sheet[""id""] = Date.now().toString();
        sheet[""name""] = ""Nova Pasta"";
        sheet[""order""] = (reportData.config.sheets.length + 1).toString();
        sheet[""graphs""] = [];
        sheet[""indicators""] = [];
        sheet[""filters""] = [];

        reportData.config.sheets.push(sheet);
        buildSheetMenu();
        changeSheet(sheet[""order""]);

    }

    var ConfigBackup;

      function init() {
        loadUsingDataFrames();
        buildSheetMenu();
        buildIndicators(currentSheet);
          buildGraphs(currentSheet);
          setObjEvents();
          ConfigBackup = JSON.parse(JSON.stringify(reportData.config));

    }
    function updateSheetConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.id; }).indexOf(id);
        reportData.config.sheets[sheetPos].name = document.getElementBy");
            WriteLiteral(@"Id(""sheetName"").value;
        buildSheetMenu();


    }

    function updateFilterConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var filterPos = reportData.config.sheets[sheetPos].filters.map(function (e) { return e.id; }).indexOf(id);
        reportData.config.sheets[sheetPos].filters[filterPos].dataFrameName = document.getElementById(""DataFrame"" + id).value;
        reportData.config.sheets[sheetPos].filters[filterPos].dimension.name = document.getElementById(""filterName"" + id).value;
        reportData.config.sheets[sheetPos].filters[filterPos].dimension.field = document.getElementById(""filterField"" + id).value;
        buildFilterSettings();
    }

    function updateIndicatorConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var indicatorPos = reportData.config.sheets[sheetPos].indicators.map(function (e) { return e.id; }).inde");
            WriteLiteral(@"xOf(id);
        reportData.config.sheets[sheetPos].indicators[indicatorPos].dataFrameName = document.getElementById(""DataFrame"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].measure.name = document.getElementById(""MeasureName"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].measure.expresion = document.getElementById(""Expression"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.width = document.getElementById(""Width"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.height = document.getElementById(""Height"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.x = document.getElementById(""X"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.y = document.getElementById(""Y"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.backgroundColor = document.getElementById(""BackgroundColor"").value;
");
            WriteLiteral(@"        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.textColor = document.getElementById(""TextColor"").value;
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.fontSize = document.getElementById(""FontSize"").value;



        reloadSheet();
        setObjEvents();
    }



    function updadateIndicatorDimensions(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var indicatorPos = reportData.config.sheets[sheetPos].indicators.map(function (e) { return e.id; }).indexOf(id);
        var transform = document.getElementById(""ind"" + id).style.transform.replace('translate', '').replace('(', '').replace(')', '').replace('px', '').replace('px', '').split(',');

        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.width = parseInt(document.getElementById(""ind"" + id).style.width);
        reportData.config.sheets[sheetPos].indicators[indicatorPos].style.height = parse");
            WriteLiteral(@"Int(document.getElementById(""ind"" + id).style.height);
        if (transform != """" && transform != null) {
            var x = parseInt(reportData.config.sheets[sheetPos].indicators[indicatorPos].style.x) + parseInt(transform[0]);
            reportData.config.sheets[sheetPos].indicators[indicatorPos].style.x = x.toString();
            var y = parseInt(reportData.config.sheets[sheetPos].indicators[indicatorPos].style.y) + parseInt(transform[1]);
            reportData.config.sheets[sheetPos].indicators[indicatorPos].style.y = y.toString();
        }
       reloadSheet();
        setObjEvents();
        buildIndicatorSettings(id);
    }

    function updadateGraphDimensions(id) {
        var sheetPos = reportData.config.sheets.map(function (e) { return e.order; }).indexOf(currentSheet);
        var graphPos = reportData.config.sheets[sheetPos].graphs.map(function (e) { return e.id; }).indexOf(id);
        var transform = document.getElementById(""gc"" + id).style.transform.replace('translate', ''");
            WriteLiteral(@").replace('(', '').replace(')', '').replace('px', '').replace('px', '').split(',');

        reportData.config.sheets[sheetPos].graphs[graphPos].style.width = parseInt(document.getElementById(""gc"" + id).style.width);
        reportData.config.sheets[sheetPos].graphs[graphPos].style.height = parseInt(document.getElementById(""gc"" + id).style.height);
        if (transform != """" && transform != null) {
            var x = parseInt(reportData.config.sheets[sheetPos].graphs[graphPos].style.x) + parseInt(transform[0]);
            reportData.config.sheets[sheetPos].graphs[graphPos].style.x = x.toString();
            var y = parseInt(reportData.config.sheets[sheetPos].graphs[graphPos].style.y) + parseInt(transform[1]);
            reportData.config.sheets[sheetPos].graphs[graphPos].style.y = y.toString();
        }

        reloadSheet();
        setObjEvents();
        buildGraphSettings(id);
    }

    function updateGraphConfig(id) {
        var sheetPos = reportData.config.sheets.map(function (");
            WriteLiteral(@"e) { return e.order; }).indexOf(currentSheet);
        var graphPos = reportData.config.sheets[sheetPos].graphs.map(function (e) { return e.id; }).indexOf(id);

        reportData.config.sheets[sheetPos].graphs[graphPos].dataFrameName = document.getElementById(""DataFrame"").value;

        reportData.config.sheets[sheetPos].graphs[graphPos].style.width = document.getElementById(""Width"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.height = document.getElementById(""Height"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.x = document.getElementById(""X"").value;
        reportData.config.sheets[sheetPos].graphs[graphPos].style.y = document.getElementById(""Y"").value;

        for (var i = 0; i < reportData.config.sheets[sheetPos].graphs[graphPos].dimensions.length; i++) {
            var dimId = reportData.config.sheets[sheetPos].graphs[graphPos].dimensions[i].id;
            reportData.config.sheets[sheetPos].graphs[graphPos].dimensions[i].name = do");
            WriteLiteral(@"cument.getElementById(""dimname"" + dimId).value;
            reportData.config.sheets[sheetPos].graphs[graphPos].dimensions[i].field = document.getElementById(""dimfield"" + dimId).value;
        }

        for (var i = 0; i < reportData.config.sheets[sheetPos].graphs[graphPos].measures.length; i++) {
            var measureId = reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].id;
            reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].name = document.getElementById(""measureName"" + measureId).value;
            reportData.config.sheets[sheetPos].graphs[graphPos].measures[i].expresion = document.getElementById(""measureExp"" + measureId).value;
        }

        switch (reportData.config.sheets[sheetPos].graphs[graphPos].objectType) {
            case 'bar': { updateBarChart(sheetPos, graphPos); break; }
            case 'pie': { updatePieChart(sheetPos, graphPos); break; }
            case 'line': { updateLineChart(sheetPos, graphPos); break; }
            case 'tr");
            WriteLiteral(@"ee': { updateTreeMap(sheetPos, graphPos); break; }
            default: break;
        }

        reloadSheet();
        setObjEvents();
    }

    function updateBarChart(sheetPos, graphPos) {


    }

    function updatePieChart(sheetPos, graphPos) {

    }

    function updateLineChart(sheetPos, graphPos) {

    }

    function updateTreeMap(sheetPos, graphPos) {

    }


    function setObjEvents() {
        var sheets = reportData.config.sheets.filter(function (x) { return x.order == currentSheet });
        var sLenght;
        if (sheets == null) {
            sLenght = 0;
        }
        else {
            sLenght = sheets.length;
        }
        for (var i = 0; i < sLenght; i++) {
            var sheet = sheets[i];

            var indicators = sheet.indicators;
            var iLenght;
            if (indicators == null) {
                iLenght = 0;
            }
            else {
                iLenght = indicators.length;
            }
        ");
            WriteLiteral(@"    for (var j = 0; j < iLenght; j++) {
                var indicator = indicators[j];
                document.getElementById(""ind"" + indicator.id).setAttribute(""onclick"", ""indicatorSettings('"" + indicator.id + ""')"");
                document.getElementById(""ind"" + indicator.id).setAttribute(""onmouseup"", ""updadateIndicatorDimensions('"" + indicator.id + ""')"");
            }

            var graphs = sheet.graphs;
            var gLenght;
            if (graphs == null) {
                gLenght = 0;
            }
            else {
                gLenght = graphs.length;
            }
            for (var j = 0; j < gLenght; j++) {
                var graph = graphs[j];
                document.getElementById(""gc"" + graph.id).setAttribute(""onclick"", ""graphSettings('"" + graph.id + ""')"");
                document.getElementById(""gc"" + graph.id).setAttribute(""onmouseup"", ""updadateGraphDimensions('"" + graph.id + ""')"");
            }
        }
    }

    function indicatorSettings(id) {
   ");
            WriteLiteral(@"     buildIndicatorSettings(id);
    }
    function graphSettings(id) {
        buildGraphSettings(id);
    }
    function reloadGraph(id) {
        var graphId = id.substr(2);
        var graph = reportData.config.sheets.filter(function (x) { return x.order == sheetOrder })[0].graphs.filter(function (y) { return y.id == graphId })[0];
        switch (graph.objectType) {

            case 'bar': { buildBarChart(graph); break; }
            case 'pie': { buildPieChart(graph); break; }
            case 'line': { buildLineChart(graph); break; }
            case 'tree': { buildTreeMap(graph); break; }
            default: break;


        }
    }

    function buildSheetMenu() {
        var content = document.getElementById(""sheetList"");
        while (content.firstChild) {
            content.removeChild(content.lastChild);
        }

        var sheets = reportData.config.sheets;
        for (var i = 0; i < sheets.length; i++) {
            var liSheet = document.createElement(""li"");");
            WriteLiteral(@"
            var aSheet = document.createElement(""a"");
            aSheet.appendChild(document.createTextNode(sheets[i].name));
            aSheet.setAttribute(""href"", ""#"");
            aSheet.setAttribute(""onclick"", ""changeSheet('"" + sheets[i].order + ""')"");
            liSheet.appendChild(aSheet);
            var editbutton = document.createElement(""button"");
            var editIcon = document.createElement(""i"");
            editIcon.setAttribute(""class"", ""fa fa-edit"");
            editbutton.appendChild(editIcon);
            editbutton.setAttribute(""onclick"", ""buildSheetSettings('"" + sheets[i].id + ""')"");
      
            liSheet.appendChild(editbutton);
            document.getElementById(""sheetList"").appendChild(liSheet);

        }

        var liAddSheet = document.createElement(""li"");
        var buttonSheet = document.createElement(""button"");
        buttonSheet.appendChild(document.createTextNode(""Nova Pasta""));
        buttonSheet.setAttribute(""href"", ""#"");
        buttonSh");
            WriteLiteral(@"eet.setAttribute(""onclick"", ""AddSheet()"");
        liAddSheet.appendChild(buttonSheet);
        document.getElementById(""sheetList"").appendChild(liAddSheet);


    }







    function loadUsingDataFrames() {


        usingDataFrames = JSON.parse(JSON.stringify(reportData.dataFrames));
    }


    function reloadSheet() {
        var graphs = document.getElementById(""Graphs"");
        while (graphs.firstChild) {
            graphs.removeChild(graphs.lastChild);
        }


        buildIndicators(currentSheet);
        buildGraphs(currentSheet);
    }

    function changeSheet(sheetOrder) {
        currentSheet = sheetOrder;
        reloadSheet();
        setObjEvents();
    }






    function GetReportData(){


        $.ajax(
            {
                type: 'POST',
                url: 'Report/GetReportData?id=");
            EndContext();
            BeginContext(21776, 8, false);
#line 513 "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml"
                                         Write(Model.Id);

#line default
#line hidden
            EndContext();
            BeginContext(21784, 405, true);
            WriteLiteral(@"',
                dataType: 'json',
                cache: false,
                async: true,
                success: function (data) {

                    reportData = data;

                    init();
                }

            });


    }

    function SaveReport() {
        $.ajax(
            {
                type: 'POST',
                url: 'Editor/UploadConfig?id=");
            EndContext();
            BeginContext(22190, 8, false);
#line 533 "C:\Users\artur\source\repos\Terz\Terz\Views\Editor\Index.cshtml"
                                        Write(Model.Id);

#line default
#line hidden
            EndContext();
            BeginContext(22198, 300, true);
            WriteLiteral(@"',
                dataType: 'json',
                cache: false,
                async: true,
                success: function (data) {

                    alert(data);
                },
                data: reportData.config

            });
    }

    GetReportData();
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Terz.Models.Editor.EditorView> Html { get; private set; }
    }
}
#pragma warning restore 1591
