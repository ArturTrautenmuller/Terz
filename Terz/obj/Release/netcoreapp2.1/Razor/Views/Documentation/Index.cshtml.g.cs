#pragma checksum "C:\Users\artur\source\repos\Terz\Terz\Views\Documentation\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b80b024b6ac18e4b2c25970742934ade7f96c65e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Documentation_Index), @"mvc.1.0.view", @"/Views/Documentation/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Documentation/Index.cshtml", typeof(AspNetCore.Views_Documentation_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\artur\source\repos\Terz\Terz\Views\_ViewImports.cshtml"
using Terz;

#line default
#line hidden
#line 2 "C:\Users\artur\source\repos\Terz\Terz\Views\_ViewImports.cshtml"
using Terz.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b80b024b6ac18e4b2c25970742934ade7f96c65e", @"/Views/Documentation/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a2e29dedaf5a7a7167ab403312e09f21f298b081", @"/Views/_ViewImports.cshtml")]
    public class Views_Documentation_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/fontawesome/js/all.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/plugins/bootstrap/css/bootstrap.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/plugins/prism/prism.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/plugins/elegant_font/css/style.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("theme-style"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/css/styles.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline search-form justify-content-center"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "get", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/plugins/jquery-3.4.1.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/plugins/bootstrap/js/bootstrap.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/plugins/prism/prism.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/plugins//jquery.scrollTo.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/terz/assets/plugins/stickyfill/dist/stickyfill.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("body-green"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 35, true);
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            EndContext();
            BeginContext(35, 1084, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b80b024b6ac18e4b2c25970742934ade7f96c65e10113", async() => {
                BeginContext(41, 287, true);
                WriteLiteral(@"
    <title>Bootstrap 4 project documentation theme for developers</title>
    <!-- Meta -->
    <meta charset=""utf-8"">
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <meta name=""description""");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 328, "\"", 338, 0);
                EndWriteAttribute();
                BeginContext(339, 26, true);
                WriteLiteral(">\r\n    <meta name=\"author\"");
                EndContext();
                BeginWriteAttribute("content", " content=\"", 365, "\"", 375, 0);
                EndWriteAttribute();
                BeginContext(376, 259, true);
                WriteLiteral(@">
    <link rel=""shortcut icon"" href=""favicon.ico"">
    <link href='https://fonts.googleapis.com/css?family=Open+Sans:300italic,400italic,600italic,700italic,800italic,400,300,600,700,800' rel='stylesheet' type='text/css'>
    <!-- FontAwesome JS -->
    ");
                EndContext();
                BeginContext(635, 65, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b80b024b6ac18e4b2c25970742934ade7f96c65e11553", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                BeginWriteTagHelperAttribute();
                __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                __tagHelperExecutionContext.AddHtmlAttribute("defer", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(700, 31, true);
                WriteLiteral("\r\n    <!-- Global CSS -->\r\n    ");
                EndContext();
                BeginContext(731, 84, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b80b024b6ac18e4b2c25970742934ade7f96c65e13155", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(815, 32, true);
                WriteLiteral("\r\n    <!-- Plugins CSS -->\r\n    ");
                EndContext();
                BeginContext(847, 68, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b80b024b6ac18e4b2c25970742934ade7f96c65e14518", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(915, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(921, 79, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b80b024b6ac18e4b2c25970742934ade7f96c65e15852", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1000, 32, true);
                WriteLiteral("\r\n\r\n    <!-- Theme CSS -->\r\n    ");
                EndContext();
                BeginContext(1032, 76, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b80b024b6ac18e4b2c25970742934ade7f96c65e17219", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(1108, 4, true);
                WriteLiteral("\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1119, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(1121, 45923, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b80b024b6ac18e4b2c25970742934ade7f96c65e19445", async() => {
                BeginContext(1146, 871, true);
                WriteLiteral(@"
    <div class=""page-wrapper"">
        <!-- ******Header****** -->
        <header id=""header"" class=""header"">
            <div class=""container"">
                <div class=""branding"">
                    <h1 class=""logo"">
                        <a href=""index.html"">
                            <span aria-hidden=""true"" class=""icon_documents_alt icon""></span>
                            <span class=""text-highlight"">Pretty</span><span class=""text-bold"">Docs</span>
                        </a>
                    </h1>

                </div><!--//branding-->

                <ol class=""breadcrumb"">
                    <li class=""breadcrumb-item""><a href=""index.html"">Home</a></li>
                    <li class=""breadcrumb-item active"">Quick Start</li>
                </ol>

                <div class=""top-search-box"">
                    ");
                EndContext();
                BeginContext(2017, 360, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b80b024b6ac18e4b2c25970742934ade7f96c65e20732", async() => {
                    BeginContext(2101, 269, true);
                    WriteLiteral(@"

                        <input type=""text"" placeholder=""Search..."" name=""search"" class=""form-control search-input"">

                        <button type=""submit"" class=""btn search-btn"" value=""Search""><i class=""fas fa-search""></i></button>

                    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_9.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2377, 44083, true);
                WriteLiteral(@"
                </div>

            </div><!--//container-->
        </header><!--//header-->
        <div class=""doc-wrapper"">
            <div class=""container"">
                <div id=""doc-header"" class=""doc-header text-center"">
                    <h1 class=""doc-title""><i class=""icon fa fa-paper-plane""></i> Quick Start</h1>
                    <div class=""meta""><i class=""far fa-clock""></i> Last updated: April 27th, 2020</div>
                </div><!--//doc-header-->
                <div class=""doc-body row"">
                    <div class=""doc-content col-md-9 col-12 order-1"">
                        <div class=""content-inner"">
                            <section id=""download-section"" class=""doc-section"">
                                <h2 class=""section-title"">Download</h2>
                                <div class=""section-block"">
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nec impe");
                WriteLiteral(@"rdiet turpis. Curabitur aliquet pulvinar ultrices. Etiam at posuere leo. Proin ultrices ex et dapibus feugiat <a href=""#"">link example</a> aenean purus leo, faucibus at elit vel, aliquet scelerisque dui. Etiam quis elit euismod, imperdiet augue sit amet, imperdiet odio. Aenean sem erat, hendrerit  eu gravida id, dignissim ut ante. Nam consequat porttitor libero euismod congue.
                                    </p>
                                    <a href=""https://themes.3rdwavemedia.com/bootstrap-templates/startup/prettydocs-free-bootstrap-theme-for-developers-and-startups/"" class=""btn btn-green"" target=""_blank""><i class=""fas fa-download""></i> Download PrettyDocs</a>
                                </div>
                            </section><!--//doc-section-->
                            <section id=""installation-section"" class=""doc-section"">
                                <h2 class=""section-title"">Installation</h2>
                                <div id=""step1"" class=""section-block"">
     ");
                WriteLiteral(@"                               <h3 class=""block-title"">Step One</h3>
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis.
                                    </p>
                                    <div class=""code-block"">
                                        <h6>Default code example:</h6>
                                        <p><code>bower install &lt;package&gt;</code></p>
                                        <p><code>npm install &lt;package&gt;</code></p>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->
                                <div id=""step2"" class=""section-block"">
                                    <h3 class=""block-title"">Step Two</h3>
                                  ");
                WriteLiteral(@"  <p>
                                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa.
                                    </p>
                                    <div class=""row"">
                                        <div class=""col-md-6 col-12"">
                                            <h6>Un-ordered list example</h6>
                                            <ul class=""list"">
                                                <li>Lorem ipsum dolor sit amet.</li>
                                                <li>Aliquam tincidunt mauris.</li>
                                                <li>
                                                    Ultricies eget vel aliquam libero.
                                                    <ul>
                                                        <li>Turpis pulvinar</li>
                                                        <li>Feugiat scelerisque</li>
                       ");
                WriteLiteral(@"                                 <li>Ut tincidunt</li>
                                                    </ul>
                                                </li>
                                                <li>Pellentesque habitant morbi.</li>
                                                <li>Praesent dapibus, neque id.</li>
                                            </ul>
                                        </div>
                                        <div class=""col-md-6 col-12"">
                                            <h6>Ordered list example</h6>
                                            <ol class=""list"">
                                                <li>Lorem ipsum dolor sit amet.</li>
                                                <li>Aliquam tincidunt mauris.</li>
                                                <li>
                                                    Ultricies eget vel aliquam libero.
                                                    <ul>
   ");
                WriteLiteral(@"                                                     <li>Turpis pulvinar</li>
                                                        <li>Feugiat scelerisque</li>
                                                        <li>Ut tincidunt</li>
                                                    </ul>
                                                </li>
                                                <li>Pellentesque habitant morbi.</li>
                                                <li>Praesent dapibus, neque id.</li>
                                            </ol>
                                        </div>
                                    </div><!--//row-->
                                </div><!--//section-block-->
                                <div id=""step3"" class=""section-block"">
                                    <h3 class=""block-title"">Step Three</h3>
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetuer adipi");
                WriteLiteral(@"scing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis.
                                    </p>
                                </div><!--//section-block-->
                            </section><!--//doc-section-->

                            <section id=""exp-section"" class=""doc-section"">
                                <h2 class=""section-title"">Métricas</h2>
                                <div class=""section-block"">
                                    <p>
                                        Considere a seguinte base de dados para executar os cálculos.
                                    </p>
                                    <div>
                                        <pre><code class=""language-markup"">
    produto,categoria,custo_unitario,quantidade_vendida
    laranja,fruta,0.89,130
    maçã,fruta,0.79,180
    papel toalha,higiene,1.19,30
    escova de dentes,higiene,2.99");
                WriteLiteral(@",10
    barra de chocolate,doces,4.90,30
    pão frances,padaria,3.99,200
    torta de chocolate,padaria,11.90,10
    iogurte,lacticineos,1.09,80
    sorvete,lacticineos,13.90,30
    arroz 5kg,grãos,9.90,80
    refrigerante,bebidas,5.90,110
    picanha 1kg,carnes,29.90,15
    chave de fenda,ferramentas,8.90,5
</code></pre>
                                    </div>

                                </div><!--//section-block-->
                                <div id=""sum"" class=""section-block"">


                                    <div class=""code-block"">
                                        <h6>Sum</h6>
                                        <p>Calcula o total dos valores dados pela expressão ou campo em todos os dados agregados. </p>
                                        <p>Sintaxe:</p>
                                        <pre><code class=""language-markup"">
    sum(expr)
</code></pre>
                                        <p>Exemplo:</p>
                                 ");
                WriteLiteral(@"       <pre><code class=""language-markup"">
    sum([custo_unitario]*[quantidade_vendida])   //retorna 3825.7
</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->

                                <div id=""count"" class=""section-block"">


                                    <div class=""code-block"">
                                        <h6>Count</h6>
                                        <p>É utilizada para agregar o número de valores, de texto e numérico em cada uma das dimensões de gráfico ou do indicador. </p>
                                        <p>Sintaxe:</p>
                                        <pre><code class=""language-markup"">
    count(expr)
</code></pre>
                                        <p>Exemplo:</p>
                                        <pre><code class=""language-markup"">
    count([produto])   //retorna 13
</code></pre>
                                    </div><!--//code-blo");
                WriteLiteral(@"ck-->
                                </div><!--//section-block-->

                                <div id=""min"" class=""section-block"">


                                    <div class=""code-block"">
                                        <h6>Min</h6>
                                        <p>Retorna o menor valor numérico dos dados agregados na expressão. </p>
                                        <p>Sintaxe:</p>
                                        <pre><code class=""language-markup"">
    min(expr)
</code></pre>
                                        <p>Exemplo:</p>
                                        <pre><code class=""language-markup"">
    min([custo_unitario])   //retorna 0.79
</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->

                                <div id=""max"" class=""section-block"">


                                    <div class=""code-block"">
                             ");
                WriteLiteral(@"           <h6>Max</h6>
                                        <p> Encontra o valor mais alto dos dados agregados. </p>
                                        <p>Sintaxe:</p>
                                        <pre><code class=""language-markup"">
    max(expr)
</code></pre>
                                        <p>Exemplo:</p>
                                        <pre><code class=""language-markup"">
    max([custo_unitario]*[quantidade_vendida])   //retorna 798
</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->

                                <div id=""where"" class=""section-block"">


                                    <div class=""code-block"">
                                        <h6>Where</h6>
                                        <p>Aplica um filtro independente à uma expressão basica </p>
                                        <p>Sintaxe:</p>
                                        <pre");
                WriteLiteral(@"><code class=""language-markup"">
    .where([campo1]={'valor1',...},[campo2]-={'valor1',...} , ...)
</code></pre>
                                        <p>Exemplo:</p>
                                        <pre><code class=""language-markup"">
    sum([custo_unitario]*[quantidade_vendida]).where([categoria]={'fruta'})   //retorna 257.9

    sum([custo_unitario]*[quantidade_vendida]).where([categoria]-={'fruta'})   //retorna 3567.9
</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->


                                <div id=""ignoreAll"" class=""section-block"">


                                    <div class=""code-block"">
                                        <h6>ignoreAll</h6>
                                        <p>Ignora todas as seleções do filtro </p>
                                        <p>Sintaxe:</p>
                                        <pre><code class=""language-markup"">
    .ignoreAll()");
                WriteLiteral(@"
</code></pre>
                                        <p>Exemplo:</p>
                                        <pre><code class=""language-markup"">

    sum([custo_unitario]*[quantidade_vendida]).ignoreAll()

    sum([custo_unitario]*[quantidade_vendida]).where([categoria]={'fruta'}).ignoreAll()


</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->

                                <div id=""ignore"" class=""section-block"">


                                    <div class=""code-block"">
                                        <h6>Ignore</h6>
                                        <p>Ignora  seleções de campos específicos do filtro </p>
                                        <p>Sintaxe:</p>
                                        <pre><code class=""language-markup"">
    .ignore(campo1,campo2,...)
</code></pre>
                                        <p>Exemplo:</p>
                                        <p");
                WriteLiteral(@"re><code class=""language-markup"">

    sum([custo_unitario]*[quantidade_vendida]).ignore(produto,categoria)

    sum([custo_unitario]*[quantidade_vendida]).where([categoria]={'fruta'}).ignore(produto)


</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->

                                <div id=""externalDF"" class=""section-block"">


                                    <div class=""code-block"">
                                        <h6>externalDF</h6>
                                        <p>O cálculo será executado no dataframe especifícado. </p>
                                        <p>Para utilizar um dataframe composto, especifique todos os dataframes em sua ordem de associação. </p>
                                        <p>Sintaxe:</p>
                                        <pre><code class=""language-markup"">
    .externalDF(df)
    .externalDF(df1,df2,...)
</code></pre>
                     ");
                WriteLiteral(@"                   <p>Exemplo:</p>
                                        <pre><code class=""language-markup"">

    sum([valor]).externalDF(gastos)


</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->

                                <div id=""css"" class=""section-block"">
                                    <div class=""code-block"">
                                        <h6>CSS Code Example</h6>
                                        <pre><code class=""language-css"">/* ======= Base Styling ======= */
body {
    font-family: 'Open Sans', arial, sans-serif; 
    color: #333; 
    font-size: 16px; 
    -webkit-font-smoothing: antialiased; 
    -moz-osx-font-smoothing: grayscale; 
}</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->
                                <div id=""sass"" class=""section-block"">
                     ");
                WriteLiteral(@"               <div class=""code-block"">
                                        <h6>SCSS Code Example</h6>
                                        <pre><code class=""language-css"">abcmixin transform($property) {
  -webkit-transform: $property;
      -ms-transform: $property;
          transform: $property;
}

.box { abcinclude transform(rotate(30deg)); }</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->
                                <div id=""less"" class=""section-block"">
                                    <div class=""code-block"">
                                        <h6>LESS Code Example</h6>
                                        <pre><code class=""language-css"">abcbase: #f04615;
abcwidth: 0.5;

.class {
  width: percentage(abcwidth); // returns &#x60;50%&#x60;
  color: saturate(abcbase, 5%);
  background-color: spin(lighten(abcbase, 25%), 8);
}</code></pre>
                                    </di");
                WriteLiteral(@"v><!--//code-block-->
                                </div><!--//section-block-->
                                <div id=""javascript"" class=""section-block"">
                                    <div class=""code-block"">
                                        <h6>JavaScript Code Example</h6>
                                        <pre><code class=""language-javascript"">&lt;script&gt; 
    function myFunction(a, b) { 
        return a * b; 
    } 
    
    document.getElementById(&quot;demo&quot;).innerHTML = myFunction(4, 3); 
&lt;/script&gt;</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->
                                <div id=""python"" class=""section-block"">
                                    <div class=""code-block"">
                                        <h6>Python Code Example</h6>
                                        <pre><code class=""language-python"">&gt;&gt;&gt; x = int(input(&quot;
Please ent");
                WriteLiteral(@"er an integer: &quot;)) Please enter an integer: 42 
&gt;&gt;&gt; if x &lt; 0: 
... x = 0 
... print('Negative changed to zero') 
... elif x == 0: 
... print('Zero') 
... elif x == 1: 
... print('Single') 
... else: 
... print('More') 
... More</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->
                                <div id=""php"" class=""section-block"">
                                    <div class=""code-block"">
                                        <h6>PHP Code Example</h6>
                                        <pre><code class=""language-php"">&lt;?php 
$txt = &quot;Hello world!&quot;; 
$x = 5; 
$y = 10.5; 

echo $txt; 
echo &quot;&lt;br&gt;&quot;; 
echo $x; 
echo &quot;&lt;br&gt;&quot;; 
echo $y; 
?&gt;</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->
                                <div id=""handl");
                WriteLiteral(@"ebars"" class=""section-block"">
                                    <div class=""code-block"">
                                        <h6>Handlebars Code Example</h6>
                                        <pre><code class=""language-handlebars"">Handlebars.registerHelper('list', function(items, options) { 
  var out = &quot;&lt;ul&gt;&quot;; 
  
  for(var i=0, l=items.length; i&lt;l; i++) { 
    out = out + &quot;&lt;li&gt;&quot; + options.fn(items[i]) + &quot;&lt;/li&gt;&quot;; 
  } 
  
  return out + &quot;&lt;/ul&gt;&quot;; 
});</code></pre>
                                    </div><!--//code-block-->
                                    <div class=""code-block"">
                                        <h6>Git Code Example</h6>
                                        <pre><code class=""language-git"">$ git add Documentation.txt</code></pre>
                                    </div><!--//code-block-->
                                </div><!--//section-block-->
                            </sec");
                WriteLiteral(@"tion><!--//doc-section-->
                            <section id=""callouts-section"" class=""doc-section"">
                                <h2 class=""section-title"">Callouts</h2>
                                <div class=""section-block"">
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo.
                                    </p>
                                </div>
                                <div class=""section-block"">
                                    <div class=""callout-block callout-info"">
                                        <div class=""i");
                WriteLiteral(@"con-holder"">
                                            <i class=""fas fa-info-circle""></i>
                                        </div><!--//icon-holder-->
                                        <div class=""content"">
                                            <h4 class=""callout-title"">Aenean imperdiet</h4>
                                            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium <code>&lt;code&gt;</code> , Nemo enim ipsam voluptatem quia voluptas <a href=""#"">link example</a> sit aspernatur aut odit aut fugit.</p>
                                        </div><!--//content-->
                                    </div><!--//callout-block-->

                                    <div class=""callout-block callout-warning"">
                                        <div class=""icon-holder"">
                                            <i class=""fas fa-bug""></i>
                                        </div><!--//icon-holder-->
                          ");
                WriteLiteral(@"              <div class=""content"">
                                            <h4 class=""callout-title"">Morbi posuere</h4>
                                            <p>Nunc hendrerit odio quis dignissim efficitur. Proin ut finibus libero. Morbi posuere fringilla felis eget sagittis. Fusce sem orci, cursus in tortor <a href=""#"">link example</a> tellus vel diam viverra elementum.</p>
                                        </div><!--//content-->
                                    </div><!--//callout-block-->

                                    <div class=""callout-block callout-success"">
                                        <div class=""icon-holder"">
                                            <i class=""fas fa-thumbs-up""></i>
                                        </div><!--//icon-holder-->
                                        <div class=""content"">
                                            <h4 class=""callout-title"">Lorem ipsum dolor sit amet</h4>
                                        ");
                WriteLiteral(@"    <p>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. <a href=""#"">Link example</a> aenean commodo ligula eget dolor.</p>
                                        </div><!--//content-->
                                    </div><!--//callout-block-->

                                    <div class=""callout-block callout-danger"">
                                        <div class=""icon-holder"">
                                            <i class=""fas fa-exclamation-triangle""></i>
                                        </div><!--//icon-holder-->
                                        <div class=""content"">
                                            <h4 class=""callout-title"">Interdum et malesuada</h4>
                                            <p>Morbi eget interdum sapien. Donec sed turpis sed nulla lacinia accumsan vitae ut tellus. Aenean vestibulum <a href=""#"">Link example</a> maximus ipsum vel dignissim. Morbi ornare elit sit amet massa feugiat, viverra dictum ipsum pellentesque. </p>");
                WriteLiteral(@"
                                        </div><!--//content-->
                                    </div><!--//callout-block-->
                                </div>
                            </section><!--//doc-section-->
                            <section id=""tables-section"" class=""doc-section"">
                                <h2 class=""section-title"">Tables</h2>
                                <div class=""section-block"">
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis.
                                    </p>
                                </div>
                                <div class=""section-block"">
                                    <h6>Basic Table</h6>
                                    <div class=""table-responsive"">
                     ");
                WriteLiteral(@"                   <table class=""table"">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Username</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <th scope=""row"">1</th>
                                                    <td>Mark</td>
                                                    <td>Otto</td>
                                                    <td>abcmdo</td>
                                                </tr>
                                             ");
                WriteLiteral(@"   <tr>
                                                    <th scope=""row"">2</th>
                                                    <td>Jacob</td>
                                                    <td>Thornton</td>
                                                    <td>abcfat</td>
                                                </tr>
                                                <tr>
                                                    <th scope=""row"">3</th>
                                                    <td>Larry</td>
                                                    <td>the Bird</td>
                                                    <td>abctwitter</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div><!--//table-responsive-->
                                    <h6>Striped Table</h6>
                                    <div class");
                WriteLiteral(@"=""table-responsive"">
                                        <table class=""table table-striped"">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Username</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <th scope=""row"">1</th>
                                                    <td>Mark</td>
                                                    <td>Otto</td>
                                                    <td>abcmdo</td>
                                           ");
                WriteLiteral(@"     </tr>
                                                <tr>
                                                    <th scope=""row"">2</th>
                                                    <td>Jacob</td>
                                                    <td>Thornton</td>
                                                    <td>abcfat</td>
                                                </tr>
                                                <tr>
                                                    <th scope=""row"">3</th>
                                                    <td>Larry</td>
                                                    <td>the Bird</td>
                                                    <td>abctwitter</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div><!--//table-responsive-->
                                    <h6>Bordered ");
                WriteLiteral(@"Table</h6>
                                    <div class=""table-responsive"">
                                        <table class=""table table-bordered"">
                                            <thead>
                                                <tr>
                                                    <th>#</th>
                                                    <th>First Name</th>
                                                    <th>Last Name</th>
                                                    <th>Username</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <th scope=""row"">1</th>
                                                    <td>Mark</td>
                                                    <td>Otto</td>
                                                    <");
                WriteLiteral(@"td>abcmdo</td>
                                                </tr>
                                                <tr>
                                                    <th scope=""row"">2</th>
                                                    <td>Jacob</td>
                                                    <td>Thornton</td>
                                                    <td>abcfat</td>
                                                </tr>
                                                <tr>
                                                    <th scope=""row"">3</th>
                                                    <td>Larry</td>
                                                    <td>the Bird</td>
                                                    <td>abctwitter</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div><!--//table-respo");
                WriteLiteral(@"nsive-->
                                </div><!--//section-block-->
                            </section><!--//doc-section-->
                            <section id=""buttons-section"" class=""doc-section"">
                                <h2 class=""section-title"">Buttons</h2>
                                <div class=""section-block"">
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nec imperdiet turpis. Curabitur aliquet pulvinar ultrices. Etiam at posuere leo. Proin ultrices ex et dapibus feugiat <a href=""#"">link example</a> aenean purus leo, faucibus at elit vel, aliquet scelerisque dui. Etiam quis elit euismod, imperdiet augue sit amet, imperdiet odio. Aenean sem erat, hendrerit  eu gravida id, dignissim ut ante. Nam consequat porttitor libero euismod congue.
                                    </p>
                                    <div class=""row"">
                                        <div clas");
                WriteLiteral(@"s=""col-md-6 col-12"">
                                            <h6>Basic Buttons</h6>
                                            <ul class=""list list-unstyled"">
                                                <li><a href=""#"" class=""btn btn-primary"">Primary Button</a></li>
                                                <li><a href=""#"" class=""btn btn-green"">Green Button</a></li>
                                                <li><a href=""#"" class=""btn btn-blue"">Blue Button</a></li>
                                                <li><a href=""#"" class=""btn btn-orange"">Orange Button</a></li>
                                                <li><a href=""#"" class=""btn btn-red"">Red Button</a></li>
                                            </ul>
                                        </div>
                                        <div class=""col-md-6 col-12"">
                                            <h6>CTA Buttons</h6>
                                            <ul class=""list list-unstyled"">");
                WriteLiteral(@"
                                                <li><a href=""#"" class=""btn btn-primary btn-cta""><i class=""fas fa-download""></i> Download Now</a></li>
                                                <li><a href=""#"" class=""btn btn-green btn-cta""><i class=""fas fa-code-branch""></i> Fork Now</a></li>
                                                <li><a href=""#"" class=""btn btn-blue btn-cta""><i class=""fas fa-play-circle""></i> Find Out Now</a></li>
                                                <li><a href=""#"" class=""btn btn-orange btn-cta""><i class=""fas fa-bug""></i> Report Bugs</a></li>
                                                <li><a href=""#"" class=""btn btn-red btn-cta""><i class=""fas fa-exclamation-circle""></i> Submit Issues</a></li>
                                            </ul>
                                        </div>
                                    </div><!--//row-->
                                </div><!--//section-block-->
                            </section><!--//doc-sectio");
                WriteLiteral(@"n-->
                            <section id=""video-section"" class=""doc-section"">
                                <h2 class=""section-title"">Video</h2>
                                <div class=""section-block"">
                                    <div class=""row"">
                                        <div class=""col-md-6 col-12"">
                                            <h6>Responsive Video 16:9</h6>
                                            <!-- 16:9 aspect ratio -->
                                            <div class=""embed-responsive embed-responsive-16by9"">
                                                <iframe class=""embed-responsive-item"" src=""https://www.youtube.com/embed/ejBkOjEG6F0?rel=0&amp;controls=0&amp;showinfo=0"" frameborder=""0"" allowfullscreen></iframe>
                                            </div>
                                        </div>
                                        <div class=""col-md-6 col-12"">
                                            <h6>Resp");
                WriteLiteral(@"onsive Video 4:3</h6>
                                            <!-- 4:3 aspect ratio -->
                                            <div class=""embed-responsive embed-responsive-4by3"">
                                                <iframe class=""embed-responsive-item"" src=""https://www.youtube.com/embed/ejBkOjEG6F0?rel=0&amp;controls=0&amp;showinfo=0"" frameborder=""0"" allowfullscreen></iframe>
                                            </div>
                                        </div>
                                    </div><!--//row-->
                                </div><!--//section-block-->
                                <section id=""icons-section"" class=""doc-section"">
                                    <h2 class=""section-title"">Icons</h2>
                                    <div class=""section-block"">
                                        <p>
                                            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nec imperdiet turpis. Curabi");
                WriteLiteral(@"tur aliquet pulvinar ultrices. Etiam at posuere leo. Proin ultrices ex et dapibus feugiat <a href=""#"">link example</a> aenean purus leo, faucibus at elit vel, aliquet scelerisque dui. Etiam quis elit euismod, imperdiet augue sit amet, imperdiet odio. Aenean sem erat, hendrerit  eu gravida id, dignissim ut ante. Nam consequat porttitor libero euismod congue.
                                        </p>
                                    </div><!--//section-block-->
                                    <div class=""section-block"">
                                        <h6>Elegant Icon Font</h6>
                                        <a href=""https://www.elegantthemes.com/blog/resources/elegant-icon-font"" target=""_blank""><img class=""img-fluid"" src=""assets/images/demo/elegant-icon-font.jpg"" alt=""elegant icons"" /></a>
                                    </div><!--//section-block-->
                                    <div class=""section-block"">
                                        <h6>FontAwesome Icon");
                WriteLiteral(@" Font</h6>
                                        <a href=""https://fortawesome.github.io/Font-Awesome/"" target=""_blank""><img class=""img-fluid"" src=""assets/images/demo/fontawesome-icons.png"" alt=""fontawesome"" /></a>
                                    </div><!--//section-block-->

                                </section><!--//doc-section-->

                            </section><!--//doc-section-->
                        </div><!--//content-inner-->
                    </div><!--//doc-content-->
                    <div class=""doc-sidebar col-md-3 col-12 order-0 d-none d-md-flex"">
                        <div id=""doc-nav"" class=""doc-nav"">

                            <nav id=""doc-menu"" class=""nav doc-menu flex-column sticky"">
                                <a class=""nav-link scrollto"" href=""#download-section"">Download</a>
                                <a class=""nav-link scrollto"" href=""#installation-section"">Installation</a>
                                <nav class=""doc-sub-menu nav fl");
                WriteLiteral(@"ex-column"">
                                    <a class=""nav-link scrollto"" href=""#step1"">Step One</a>
                                    <a class=""nav-link scrollto"" href=""#step2"">Step Two</a>
                                    <a class=""nav-link scrollto"" href=""#step3"">Step Three</a>
                                </nav><!--//nav-->
                                <a class=""nav-link scrollto"" href=""#exp-section"">Métricas</a>
                                <nav class=""doc-sub-menu nav flex-column"">
                                    <a class=""nav-link scrollto"" href=""#sum"">Sum</a>
                                    <a class=""nav-link scrollto"" href=""#count"">Count</a>
                                    <a class=""nav-link scrollto"" href=""#min"">Min</a>
                                    <a class=""nav-link scrollto"" href=""#max"">Max</a>
                                    <a class=""nav-link scrollto"" href=""#where"">Where</a>
                                    <a class=""nav-link scrollto"" href");
                WriteLiteral(@"=""#ignoreAll"">ignoreAll</a>
                                    <a class=""nav-link scrollto"" href=""#sass"">Sass</a>
                                    <a class=""nav-link scrollto"" href=""#less"">LESS</a>
                                    <a class=""nav-link scrollto"" href=""#javascript"">JavaScript</a>
                                    <a class=""nav-link scrollto"" href=""#python"">Python</a>
                                    <a class=""nav-link scrollto"" href=""#php"">PHP</a>
                                    <a class=""nav-link scrollto"" href=""#handlebars"">Handlebars</a>
                                </nav><!--//nav-->
                                <a class=""nav-link scrollto"" href=""#callouts-section"">Callouts</a>
                                <a class=""nav-link scrollto"" href=""#tables-section"">Tables</a>
                                <a class=""nav-link scrollto"" href=""#buttons-section"">Buttons</a>
                                <a class=""nav-link scrollto"" href=""#video-section"">Video</a>
 ");
                WriteLiteral(@"                               <a class=""nav-link scrollto"" href=""#icons-section"">Icons</a>
                            </nav><!--//doc-menu-->

                        </div>
                    </div><!--//doc-sidebar-->
                </div><!--//doc-body-->
            </div><!--//container-->
        </div><!--//doc-wrapper-->

        <div id=""promo-block"" class=""promo-block"">
            <div class=""container"">
                <div class=""promo-block-inner"">
                    <h3 class=""promo-title text-center""><i class=""fas fa-heart""></i> <a href=""https://themes.3rdwavemedia.com/bootstrap-templates/portfolio/instance-bootstrap-portfolio-theme-for-developers/"" target=""_blank"">Are you an ambitious and entrepreneurial developer?</a></h3>
                    <div class=""row"">
                        <div class=""figure-holder col-lg-5 col-md-6 col-12"">
                            <div class=""figure-holder-inner"">
                                <a href=""https://themes.3rdwavemedia.com/bo");
                WriteLiteral(@"otstrap-templates/portfolio/instance-bootstrap-portfolio-theme-for-developers/"" target=""_blank""><img class=""img-fluid"" src=""assets/images/demo/instance-promo.jpg"" alt=""Instance Theme"" /></a>
                                <a class=""mask"" href=""https://themes.3rdwavemedia.com/bootstrap-templates/portfolio/instance-bootstrap-portfolio-theme-for-developers/""><i class=""icon fa fa-heart pink""></i></a>

                            </div>
                        </div><!--//figure-holder-->
                        <div class=""content-holder col-lg-7 col-md-6 col-12"">
                            <div class=""content-holder-inner"">
                                <div class=""desc"">
                                    <h4 class=""content-title""><strong> Instance - Bootstrap 4 Portfolio Theme for Aspiring Developers</strong></h4>
                                    <p>Check out <a href=""https://themes.3rdwavemedia.com/bootstrap-templates/portfolio/instance-bootstrap-portfolio-theme-for-developers/"" target=""_blan");
                WriteLiteral(@"k"">Instance</a> - a Bootstrap personal portfolio theme I created for developers. The UX design is focused on selling a developer’s skills and experience to potential employers or clients, and has <strong class=""highlight"">all the winning ingredients to get you hired</strong>. It’s not only a HTML site template but also a marketing framework for you to <strong class=""highlight"">build an impressive online presence with a high conversion rate</strong>. </p>
                                    <p><strong class=""highlight"">[Tip for developers]:</strong> If your project is Open Source, you can use this area to promote your other projects or hold third party adverts like Bootstrap and FontAwesome do!</p>
                                    <a class=""btn btn-cta"" href=""https://themes.3rdwavemedia.com/bootstrap-templates/portfolio/instance-bootstrap-portfolio-theme-for-developers/"" target=""_blank""><i class=""fas fa-external-link-alt""></i> View Demo</a>

                                </div><!--//desc-->


     ");
                WriteLiteral(@"                           <div class=""author""><a href=""https://themes.3rdwavemedia.com"">Xiaoying Riley</a></div>
                            </div><!--//content-holder-inner-->
                        </div><!--//content-holder-->
                    </div><!--//row-->
                </div><!--//promo-block-inner-->
            </div><!--//container-->
        </div><!--//promo-block-->

    </div><!--//page-wrapper-->

    <footer id=""footer"" class=""footer text-center"">
        <div class=""container"">
            <!--/* This template is free as long as you keep the footer attribution link. If you'd like to use the template without the attribution link, you can buy the commercial license via our website: themes.3rdwavemedia.com Thank you for your support. :) */-->
            <small class=""copyright"">Designed with <i class=""fas fa-heart""></i> by <a href=""https://themes.3rdwavemedia.com/"" target=""_blank"">Xiaoying Riley</a> for developers</small>

        </div><!--//container-->
    </footer>");
                WriteLiteral("<!--//footer-->\r\n    <!-- Main Javascript -->\r\n    ");
                EndContext();
                BeginContext(46460, 88, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b80b024b6ac18e4b2c25970742934ade7f96c65e69217", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(46548, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(46554, 98, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b80b024b6ac18e4b2c25970742934ade7f96c65e70564", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(46652, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(46658, 83, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b80b024b6ac18e4b2c25970742934ade7f96c65e71911", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(46741, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(46747, 92, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b80b024b6ac18e4b2c25970742934ade7f96c65e73258", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(46839, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(46845, 102, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b80b024b6ac18e4b2c25970742934ade7f96c65e74606", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(46947, 90, true);
                WriteLiteral("\r\n    <!--  <script type=\"text/javascript\" src=\"~/terz/assets/js/main.js\"></script>-->\r\n\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(47044, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
